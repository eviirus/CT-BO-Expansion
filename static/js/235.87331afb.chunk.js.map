{"version":3,"file":"static/js/235.87331afb.chunk.js","mappings":"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","sources":["constants/urlRegex.js","hooks/useTextChange.jsx","components/code-display/CodeDisplay.jsx","utils/ShowMessage.jsx","components/landing-pages/hero-content/HeroContent.jsx","components/landing-pages/body-content/heading-content/BodyHeadingContent.jsx","components/landing-pages/body-content/paragraph-content/BodyParagraphContent.jsx","components/landing-pages/body-content/BodyContent.jsx","components/landing-pages/page-prev-next-linking/PagePrevNextLinking.jsx","generators/landing-pages/create-excursion-page/CreateExcursionPageStyles.js","generators/landing-pages/create-excursion-page/CreateExcursionPage.jsx","utils/MinifyHtml.jsx","routes/landing-pages/excursions/ExcursionPageGenerator.jsx","components/buttons/RemoveButton.jsx","hooks/useTypeChange.jsx","constants/alertMessages.js","hooks/useRows.jsx"],"sourcesContent":["export const urlRegex = /^(https?):\\/\\/[^\\s/$.?#].[^\\s]*$/i;\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useTextChange = ({ setText, setErrors, field = \"text\" }) => {\r\n  const handleTextChange = useCallback(\r\n    (key, textValue) => {\r\n      setText((prev) => ({ ...prev, [key]: textValue }));\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        [field]: {\r\n          ...(prev.text || {}),\r\n          [key]: \"\",\r\n        },\r\n      }));\r\n    },\r\n    [setText, setErrors]\r\n  );\r\n\r\n  return { handleTextChange };\r\n};\r\n","import { Input, Tooltip, Button, message } from \"antd\";\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default function CodeDisplay({ content, scrollRef }) {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(content);\r\n      setCopied(true);\r\n      message.success(\"Copied to clipboard!\");\r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (err) {\r\n      message.error(\"Failed to copy!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      ref={scrollRef}\r\n      className=\"code-display basic-col\"\r\n      id=\"codeDisplay\"\r\n      style={{ marginTop: \"20px\", width: \"100%\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"8px\",\r\n        }}\r\n      >\r\n        <h2 className=\"regular24\">Generated code</h2>\r\n        <Tooltip title={copied ? \"Copied!\" : \"Copy to clipboard\"}>\r\n          <Button\r\n            icon={<CopyOutlined />}\r\n            onClick={handleCopy}\r\n            type=\"text\"\r\n            size=\"large\"\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <TextArea value={content} style={{ resize: \"none\" }} rows={6} readOnly />\r\n    </section>\r\n  );\r\n}\r\n","import { message } from \"antd\";\r\n\r\nexport const ShowMessage = () => {\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n  const showError = (msg) => {\r\n    messageApi.open({\r\n      type: \"error\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  const showSuccess = (msg) => {\r\n    messageApi.open({\r\n      type: \"success\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  const showInfo = (msg) => {\r\n    messageApi.open({\r\n      type: \"info\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  return {\r\n    contextHolder,\r\n    showError,\r\n    showSuccess,\r\n    showInfo,\r\n  };\r\n};\r\n","import { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport \"./HeroContent.css\";\r\nimport { urlRegex } from \"../../../constants/urlRegex\";\r\n\r\nconst HeroContent = forwardRef(({ pageTitle, imageLink }, ref) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [values, setValues] = useState({\r\n    pageTitle: \"\",\r\n    imageLink: \"\",\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newErrors = {};\r\n\r\n      if (imageLink && values.imageLink.trim() !== \"\") {\r\n        if (!urlRegex.test(values.imageLink)) {\r\n          newErrors.imageLink = \"Please enter a valid URL\";\r\n        }\r\n      } else if (imageLink && values.imageLink.trim() === \"\") {\r\n        newErrors.imageLink = \"Image link is required\";\r\n      }\r\n\r\n      if (pageTitle && values.pageTitle.trim() === \"\") {\r\n        newErrors.pageTitle = \"Page title is required\";\r\n      }\r\n\r\n      setErrors(newErrors);\r\n      return Object.keys(newErrors).length === 0;\r\n    },\r\n\r\n    getValues: () => values,\r\n  }));\r\n\r\n  const handleChange = (key, value) => {\r\n    setValues((prev) => ({ ...prev, [key]: value }));\r\n    setErrors((prev) => ({ ...prev, [key]: \"\" }));\r\n  };\r\n\r\n  const fields = [];\r\n\r\n  if (pageTitle) {\r\n    fields.push({ label: \"Page title\", key: \"pageTitle\" });\r\n  }\r\n\r\n  if (imageLink) {\r\n    fields.push({ label: \"Image link\", key: \"imageLink\" });\r\n  }\r\n\r\n  return (\r\n    <section className=\"hero-content basic-col\">\r\n      <h2 className=\"regular24\">Hero content</h2>\r\n      <div className=\"content\">\r\n        {fields.map((field) => (\r\n          <div key={field.key} className=\"input\">\r\n            <label htmlFor={field.key}>{field.label}</label>\r\n            <Input\r\n              id={field.key}\r\n              value={values[field.key]}\r\n              onChange={(e) => handleChange(field.key, e.target.value)}\r\n            />\r\n            {errors[field.key] && (\r\n              <div className=\"error\">{errors[field.key]}</div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default HeroContent;\r\n","import { Select, Input, Button } from \"antd\";\r\nimport \"../BodyContent.css\";\r\nimport { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { useRows } from \"../../../../hooks/useRows\";\r\nimport { useTypeChange } from \"../../../../hooks/useTypeChange\";\r\nimport { useTextChange } from \"../../../../hooks/useTextChange\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst BodyHeadingContent = forwardRef(({ content }, ref) => {\r\n  const [selectedType, setSelectedType] = useState({});\r\n  const [selectedClass, setSelectedClass] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [text, setText] = useState({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n  const [errors, setErrors] = useState({ type: {}, text: {} });\r\n\r\n  const { handleTypeChange } = useTypeChange({\r\n    content,\r\n    setSelectedType,\r\n    setErrors,\r\n    setClasses,\r\n  });\r\n\r\n  const { handleTextChange } = useTextChange({\r\n    setText,\r\n    setErrors,\r\n  });\r\n\r\n  const types = content.map((item) => ({\r\n    label: item.type,\r\n    value: item.type,\r\n  }));\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { type: {}, text: {} };\r\n\r\n      if (rows.length !== 0) {\r\n        rows.forEach((row) => {\r\n          if (!selectedType[row.key]) {\r\n            newError.type[row.key] = \"Heading type is required\";\r\n          }\r\n\r\n          if (!text[row.key]) {\r\n            newError.text[row.key] = \"Heading content is required\";\r\n          }\r\n        });\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.type || {}).length === 0 &&\r\n        Object.keys(newError.text || {}).length === 0\r\n      );\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {};\r\n      rows.forEach((row) => {\r\n        values[row.key] = {\r\n          type: selectedType[row.key],\r\n          class: selectedClass[row.key],\r\n          text: text[row.key],\r\n        };\r\n      });\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <section className=\"heading-content\">\r\n      {rows.map((row) => (\r\n        <div className=\"basic-row\" key={row.key}>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`headingType-${row.key}`}>Heading type</label>\r\n            <Select\r\n              id={`headingType-${row.key}`}\r\n              style={{ width: \"150px\" }}\r\n              allowClear\r\n              options={types}\r\n              onChange={(value) => handleTypeChange(row.key, value)}\r\n              value={selectedType[row.key] || null}\r\n            />\r\n            {errors.type[row.key] && (\r\n              <div className=\"error\">{errors.type[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`headingClass-${row.key}`}>Heading class</label>\r\n            <Select\r\n              id={`headingClass-${row.key}`}\r\n              style={{ width: \"300px\" }}\r\n              allowClear\r\n              options={classes[row.key]}\r\n              disabled={\r\n                !selectedType[row.key] ||\r\n                !classes[row.key] ||\r\n                classes[row.key].length === 0\r\n              }\r\n              onChange={(value) =>\r\n                setSelectedClass((prev) => ({ ...prev, [row.key]: value }))\r\n              }\r\n              value={selectedClass[row.key] || null}\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor={`headingContent-${row.key}`}>Heading content</label>\r\n            <TextArea\r\n              id={`headingContent-${row.key}`}\r\n              disabled={!selectedType[row.key]}\r\n              rows={1}\r\n              style={{ resize: \"none\" }}\r\n              onChange={(e) => handleTextChange(row.key, e.target.value)}\r\n            ></TextArea>\r\n            {errors.text[row.key] && selectedType[row.key] && (\r\n              <div className=\"error\">{errors.text[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <Button\r\n            color=\"red\"\r\n            variant=\"outlined\"\r\n            onClick={() => removeRow(row.key)}\r\n            style={{ marginTop: \"29px\" }}\r\n          >\r\n            Remove heading row\r\n          </Button>\r\n        </div>\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={() => addRow()}>\r\n        Add heading row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyHeadingContent;\r\n","import { Select, Input, Button } from \"antd\";\r\nimport \"../BodyContent.css\";\r\nimport { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { useRows } from \"../../../../hooks/useRows\";\r\nimport { useTypeChange } from \"../../../../hooks/useTypeChange\";\r\nimport { useTextChange } from \"../../../../hooks/useTextChange\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst BodyParagraphContent = forwardRef(({ content }, ref) => {\r\n  const [selectedType, setSelectedType] = useState({});\r\n  const [selectedClass, setSelectedClass] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [text, setText] = useState({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n  const [errors, setErrors] = useState({ type: {}, text: {} });\r\n\r\n  const { handleTypeChange } = useTypeChange({\r\n    content,\r\n    setSelectedType,\r\n    setErrors,\r\n    setClasses,\r\n  });\r\n\r\n  const { handleTextChange } = useTextChange({\r\n    setText,\r\n    setErrors,\r\n  });\r\n\r\n  const types = content.map((item) => ({\r\n    label: item.type,\r\n    value: item.type,\r\n  }));\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { type: {}, text: {} };\r\n\r\n      if (rows.length !== 0) {\r\n        rows.forEach((row) => {\r\n          if (!selectedType[row.key]) {\r\n            newError.type[row.key] = \"Paragraph type is required\";\r\n          }\r\n\r\n          if (!text[row.key]) {\r\n            newError.text[row.key] = \"Paragraph content is required\";\r\n          }\r\n        });\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.type || {}).length === 0 &&\r\n        Object.keys(newError.text || {}).length === 0\r\n      );\r\n    },\r\n    getValues: () => {\r\n      const values = {};\r\n      rows.forEach((row) => {\r\n        values[row.key] = {\r\n          type: selectedType[row.key],\r\n          class: selectedClass[row.key],\r\n          text: text[row.key],\r\n        };\r\n      });\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <section className=\"paragraph-content\">\r\n      {rows.map((row) => (\r\n        <div className=\"basic-row\" key={row.key}>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`paragraphType-${row.key}`}>Paragraph type</label>\r\n            <Select\r\n              id={`paragraphType-${row.key}`}\r\n              style={{ width: \"150px\" }}\r\n              allowClear\r\n              options={types}\r\n              onChange={(value) => handleTypeChange(row.key, value)}\r\n              value={selectedType[row.key] || null}\r\n            />\r\n            {errors.type[row.key] && (\r\n              <div className=\"error\">{errors.type[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`paragraphClass-${row.key}`}>Paragraph class</label>\r\n            <Select\r\n              id={`paragraphClass-${row.key}`}\r\n              style={{ width: \"300px\" }}\r\n              allowClear\r\n              options={classes[row.key]}\r\n              disabled={\r\n                !selectedType[row.key] ||\r\n                !classes[row.key] ||\r\n                classes[row.key].length === 0\r\n              }\r\n              onChange={(value) =>\r\n                setSelectedClass((prev) => ({ ...prev, [row.key]: value }))\r\n              }\r\n              value={selectedClass[row.key] || null}\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor={`paragraphContent-${row.key}`}>\r\n              Paragraph content\r\n            </label>\r\n            <TextArea\r\n              id={`paragraphContent-${row.key}`}\r\n              disabled={!selectedType[row.key]}\r\n              rows={4}\r\n              style={{ resize: \"none\" }}\r\n              onChange={(e) => handleTextChange(row.key, e.target.value)}\r\n            ></TextArea>\r\n            {errors.text[row.key] && selectedType[row.key] && (\r\n              <div className=\"error\">{errors.text[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <Button\r\n            color=\"red\"\r\n            variant=\"outlined\"\r\n            onClick={() => removeRow(row.key)}\r\n            style={{ marginTop: \"29px\" }}\r\n          >\r\n            Remove paragraph row\r\n          </Button>\r\n        </div>\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={() => addRow()}>\r\n        Add paragraph row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyParagraphContent;\r\n","import { Button, Collapse } from \"antd\";\r\nimport BodyHeadingContent from \"./heading-content/BodyHeadingContent\";\r\nimport BodyParagraphContent from \"./paragraph-content/BodyParagraphContent\";\r\nimport \"./BodyContent.css\";\r\nimport { useRows } from \"../../../hooks/useRows\";\r\nimport { useRef, useImperativeHandle, forwardRef } from \"react\";\r\nimport RemoveButton from \"../../buttons/RemoveButton\";\r\n\r\nconst BodyContent = forwardRef(({ content }, ref) => {\r\n  const bodyHeadingContent = useRef({});\r\n  const bodyParagraphContent = useRef({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      for (const key in bodyHeadingContent.current) {\r\n        if (bodyHeadingContent.current[key]?.validate) {\r\n          const valid = bodyHeadingContent.current[key].validate();\r\n          if (!valid) return false;\r\n        }\r\n      }\r\n\r\n      for (const key in bodyParagraphContent.current) {\r\n        if (bodyParagraphContent.current[key]?.validate) {\r\n          const valid = bodyParagraphContent.current[key].validate();\r\n          if (!valid) return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {\r\n        heading: {},\r\n        paragraph: {},\r\n      };\r\n      for (const key in bodyHeadingContent.current) {\r\n        if (bodyHeadingContent.current[key]?.getValues) {\r\n          values.heading[key] = bodyHeadingContent.current[key].getValues();\r\n        }\r\n      }\r\n\r\n      for (const key in bodyParagraphContent.current) {\r\n        if (bodyParagraphContent.current[key]?.getValues) {\r\n          values.paragraph[key] = bodyParagraphContent.current[key].getValues();\r\n        }\r\n      }\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  const handleAddRow = () => {\r\n    addRow({ title: `Row ${rows.length + 1}` });\r\n  };\r\n\r\n  const renderContent = (rowKey) => {\r\n    const headingContent = content.find((c) => c.rowType === \"heading\");\r\n    const paragraphContent = content.find((c) => c.rowType === \"paragraph\");\r\n\r\n    return (\r\n      <>\r\n        {headingContent && (\r\n          <BodyHeadingContent\r\n            ref={(el) => (bodyHeadingContent.current[rowKey] = el)}\r\n            content={headingContent.items.headings}\r\n          />\r\n        )}\r\n        {paragraphContent && (\r\n          <BodyParagraphContent\r\n            ref={(el) => (bodyParagraphContent.current[rowKey] = el)}\r\n            content={paragraphContent.items.paragraphs}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"body-content basic-col\">\r\n      <h2 className=\"regular24\">Body content</h2>\r\n      {rows.map((row) => (\r\n        <Collapse\r\n          style={{ backgroundColor: \"#fff\" }}\r\n          key={row.key}\r\n          items={[\r\n            {\r\n              key: row.key,\r\n              label: row.title,\r\n              children: renderContent(row.key),\r\n              extra: <RemoveButton rowKey={row.key} removeRow={removeRow} />,\r\n            },\r\n          ]}\r\n        />\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={handleAddRow}>\r\n        Add row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyContent;\r\n","import { Input } from \"antd\";\r\nimport { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { urlRegex } from \"../../../constants/urlRegex\";\r\n\r\nconst PagePrevNextLinking = forwardRef((props, ref) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [values, setValues] = useState({\r\n    prevPageTitle: \"\",\r\n    prevPageLink: \"\",\r\n    nextPageTitle: \"\",\r\n    nextPageLink: \"\",\r\n  });\r\n\r\n  const handleChange = (key, value) => {\r\n    setValues((prev) => {\r\n      const newValues = { ...prev, [key]: value };\r\n\r\n      if (\r\n        (key === \"prevPageTitle\" || key === \"nextPageTitle\") &&\r\n        value === \"\"\r\n      ) {\r\n        if (key === \"prevPageTitle\") {\r\n          newValues.prevPageLink = \"\";\r\n        } else if (key === \"nextPageTitle\") {\r\n          newValues.nextPageLink = \"\";\r\n        }\r\n      }\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newErrors = {};\r\n\r\n      if (values.prevPageTitle.trim() !== \"\") {\r\n        if (values.prevPageLink.trim() === \"\") {\r\n          newErrors.prevPageLink =\r\n            \"Previous page link is required. Add it or remove previous page title\";\r\n        } else if (values.prevPageLink.trim() !== \"\") {\r\n          if (!urlRegex.test(values.prevPageLink)) {\r\n            newErrors.prevPageLink = \"Please enter a valid URL\";\r\n          }\r\n        }\r\n      }\r\n\r\n      if (values.nextPageTitle.trim() !== \"\") {\r\n        if (values.nextPageLink.trim() === \"\") {\r\n          newErrors.nextPageLink =\r\n            \"Next page link is required. Add it or remove next page title\";\r\n        } else if (values.nextPageLink.trim() !== \"\") {\r\n          if (!urlRegex.test(values.nextPageLink)) {\r\n            newErrors.nextPageLink = \"Please enter a valid URL\";\r\n          }\r\n        }\r\n      }\r\n\r\n      setErrors(newErrors);\r\n      return Object.keys(newErrors).length === 0;\r\n    },\r\n\r\n    getValues: () => values,\r\n  }));\r\n\r\n  return (\r\n    <section className=\"page-prev-next-linking basic-col\">\r\n      <h2 className=\"regular24\">Linking</h2>\r\n      <div className=\"basic-row\">\r\n        <div className=\"basic-col\">\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"prevPageTitle\">Previous page title</label>\r\n            <Input\r\n              value={values.prevPageTitle}\r\n              onChange={(value) =>\r\n                handleChange(\"prevPageTitle\", value.target.value)\r\n              }\r\n              allowClear\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"prevPageLink\">Previous page link</label>\r\n            <Input\r\n              value={values.prevPageLink}\r\n              onChange={(value) =>\r\n                handleChange(\"prevPageLink\", value.target.value)\r\n              }\r\n              disabled={!values.prevPageTitle.trim()}\r\n              allowClear\r\n            />\r\n            {errors.prevPageLink && (\r\n              <div className=\"error\">{errors.prevPageLink}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"basic-col\">\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"nextPageTitle\">Next page title</label>\r\n            <Input\r\n              value={values.nextPageTitle}\r\n              onChange={(value) =>\r\n                handleChange(\"nextPageTitle\", value.target.value)\r\n              }\r\n              allowClear\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"nextPageLink\">Next page link</label>\r\n            <Input\r\n              value={values.nextPageLink}\r\n              onChange={(value) =>\r\n                handleChange(\"nextPageLink\", value.target.value)\r\n              }\r\n              disabled={!values.nextPageTitle.trim()}\r\n              allowClear\r\n            />\r\n            {errors.nextPageLink && (\r\n              <div className=\"error\">{errors.nextPageLink}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default PagePrevNextLinking;\r\n","export const CreateExcursionPageStyles = `<style>\r\n    .excursion-main-container{max-width:1030px!important;width:100%;margin:0 auto}.excursion-article-section h3,.paragraph-to-heading{font-size:1.5em;margin-block-start:.83em;margin-block-end:.83em}.excursion-heading{text-align:center;line-height:46px;font-size:38px;display:flex;justify-content:center;font-weight:600;color:rgba(0,0,0,.85);margin-bottom:calc(.5em + 24px);margin-top:25px}.excursion-image-container img{border-radius:24px;width:100%;height:480px}.buttons-container{display:inline-flex;align-items:center;justify-content:space-between;width:100%}.next-excursion-icon,.prev-excursion-icon{width:25px;height:25px}@media (max-width:1024px){.excursion-image-container img{height:auto}}.next-excursion-container,.prev-excursion-container{display:inline-flex;width:100%;align-items:center;justify-content:flex-end;margin:30px 0;gap:5px}.prev-excursion-container{justify-content:flex-start}.next-excursion-title,.prev-excursion-title{font-size:16px;font-weight:600;margin:0}\r\n</style>`;\r\n","import { CreateExcursionPageStyles } from \"./CreateExcursionPageStyles\";\r\nimport { MinifyHtml } from \"../../../utils/MinifyHtml\";\r\n\r\nexport const CreateExcursionPage = ({\r\n  heroContent,\r\n  bodyContent,\r\n  pagePrevNextLinkingContent,\r\n}) => {\r\n  const { pageTitle, imageLink } = heroContent;\r\n\r\n  const renderArticle = () => {\r\n    const heading = bodyContent.heading || {};\r\n    const paragraph = bodyContent.paragraph || {};\r\n\r\n    return Object.keys(heading).map((groupKey) => {\r\n      return `\r\n        <article>\r\n          ${Object.values(heading[groupKey])\r\n            .map(({ type, text, class: className }) => {\r\n              if (type === \"p\" && className) {\r\n                return `<p><strong class=\"${className}\">${text}</strong></p>`;\r\n              }\r\n              return `<${type}>${text}</${type}>`;\r\n            })\r\n            .join(\"\\n\")}\r\n          ${\r\n            paragraph[groupKey]\r\n              ? Object.values(paragraph[groupKey])\r\n                  .map(({ type, text }) => {\r\n                    return `<${type}>${text}</${type}>`;\r\n                  })\r\n                  .join(\"\\n\")\r\n              : \"\"\r\n          }\r\n        </article>\r\n      `;\r\n    });\r\n  };\r\n\r\n  const renderLinks = () => {\r\n    const { prevPageTitle, prevPageLink, nextPageTitle, nextPageLink } =\r\n      pagePrevNextLinkingContent;\r\n\r\n    const linksHtml = [];\r\n\r\n    if (prevPageTitle) {\r\n      linksHtml.push(`\r\n        <a class=\"prev-excursion-container\" href=${prevPageLink} style=\"text-decoration:none;color:#000\">\r\n            <div class=\"prev-excursion-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                    <path d=\"M15 6L9 12L15 18\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\r\n                </svg></div>\r\n                <span class=\"prev-excursion-title\">${prevPageTitle}</span>\r\n        </a>\r\n        `);\r\n    }\r\n\r\n    if (nextPageTitle) {\r\n      linksHtml.push(`\r\n        <a class=\"next-excursion-container\" href=${nextPageLink} style=\"text-decoration:none;color:#000\">\r\n            \r\n                <span class=\"next-excursion-title\">${nextPageTitle}</span>\r\n                <div class=\"next-excursion-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                    <path d=\"M9 6L15 12L9 18\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\r\n                </svg></div>\r\n        </a>\r\n        `);\r\n    }\r\n\r\n    return linksHtml.join(\"\\n\");\r\n  };\r\n\r\n  return MinifyHtml({\r\n    html: `\r\n  ${CreateExcursionPageStyles}\r\n    <section class=\"excursion-main-container\">\r\n      <h1 class=\"excursion-heading\">${pageTitle}</h1>\r\n      <div class=\"excursion-image-container\">\r\n        <img\r\n          src=\"${imageLink}\"\r\n          loading=\"eager\"\r\n          fetchpriority=\"high\"\r\n          alt=\"${pageTitle}\"\r\n        />\r\n      </div>\r\n\r\n      <article class=\"excursion-article-section\">\r\n        ${renderArticle().join(\"\\n\")}\r\n      </article>\r\n\r\n      <div class=\"buttons-container\">\r\n        ${renderLinks()}\r\n      </div>\r\n    </section>\r\n  `,\r\n  });\r\n};\r\n","export const MinifyHtml = ({ html }) => {\r\n  return html\r\n    .replace(/\\n/g, \"\") // Remove newlines\r\n    .replace(/\\s{2,}/g, \" \") // Collapse multiple spaces\r\n    .replace(/>\\s+</g, \"><\") // Remove space between tags\r\n    .trim(); // Remove leading/trailing whitespace\r\n};\r\n","import { Helmet } from \"react-helmet-async\";\r\nimport { useRef, useState } from \"react\";\r\nimport HeroContent from \"../../../components/landing-pages/hero-content/HeroContent\";\r\nimport BodyContent from \"../../../components/landing-pages/body-content/BodyContent\";\r\nimport PagePrevNextLinking from \"../../../components/landing-pages/page-prev-next-linking/PagePrevNextLinking\";\r\nimport {\r\n  generateErrorMessage,\r\n  generateSuccessMessage,\r\n} from \"../../../constants/alertMessages\";\r\nimport { Button } from \"antd\";\r\nimport { CreateExcursionPage } from \"../../../generators/landing-pages/create-excursion-page/CreateExcursionPage\";\r\nimport CodeDisplay from \"../../../components/code-display/CodeDisplay\";\r\nimport { ShowMessage } from \"../../../utils/ShowMessage\";\r\n\r\nexport default function ExcursionPageGenerator() {\r\n  const pageTitle = \"Excursion page generator\";\r\n  const heroRef = useRef();\r\n  const bodyContentRef = useRef();\r\n  const pagePrevNextLinkingRef = useRef();\r\n  const [generatedHtml, setGeneratedHtml] = useState(\"\");\r\n  const codeDisplayRef = useRef(null);\r\n  const { contextHolder, showError, showSuccess } = ShowMessage();\r\n\r\n  const content = [\r\n    {\r\n      rowType: \"heading\",\r\n      items: {\r\n        headings: [\r\n          {\r\n            type: \"h2\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h3\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h4\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"p\",\r\n            class: \"paragraph-to-heading\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      rowType: \"paragraph\",\r\n      items: {\r\n        paragraphs: [\r\n          {\r\n            type: \"p\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"li\",\r\n            class: \"\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = () => {\r\n    const isHeroValid = heroRef.current?.validate?.();\r\n    const isBodyValid = bodyContentRef.current?.validate?.();\r\n    const isPagePrevNextLinkingValid =\r\n      pagePrevNextLinkingRef.current?.validate?.();\r\n\r\n    if (!isHeroValid || !isBodyValid || !isPagePrevNextLinkingValid) {\r\n      showError(generateErrorMessage);\r\n      return;\r\n    }\r\n\r\n    const heroRefValues = heroRef.current?.getValues?.();\r\n    const bodyContentValues = bodyContentRef.current?.getValues?.();\r\n    const pagePrevNextLinkingValues =\r\n      pagePrevNextLinkingRef.current?.getValues?.();\r\n\r\n    const excursionPageHtml = CreateExcursionPage({\r\n      heroContent: heroRefValues,\r\n      bodyContent: bodyContentValues,\r\n      pagePrevNextLinkingContent: pagePrevNextLinkingValues,\r\n    });\r\n\r\n    setGeneratedHtml(excursionPageHtml);\r\n\r\n    setTimeout(() => {\r\n      codeDisplayRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 100);\r\n\r\n    showSuccess(generateSuccessMessage);\r\n  };\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"title\" content={pageTitle} />\r\n      </Helmet>\r\n      <h1 className=\"regular28\">Excursion page generator</h1>\r\n      <HeroContent ref={heroRef} pageTitle={true} imageLink={true} />\r\n      <BodyContent ref={bodyContentRef} content={content} />\r\n      <PagePrevNextLinking ref={pagePrevNextLinkingRef} />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        type=\"primary\"\r\n        style={{ marginTop: \"20px\", width: \"100%\" }}\r\n      >\r\n        Generate excursion page\r\n      </Button>\r\n      {generatedHtml && (\r\n        <CodeDisplay content={generatedHtml} scrollRef={codeDisplayRef} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Button, Tooltip } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst RemoveButton = ({ rowKey, removeRow }) => {\r\n  return (\r\n    <Tooltip title=\"Remove row\" placement=\"left\">\r\n      <Button\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => removeRow(rowKey)}\r\n        color=\"red\"\r\n        variant=\"outlined\"\r\n      ></Button>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default RemoveButton;\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useTypeChange = ({\r\n  content,\r\n  setSelectedType,\r\n  setErrors,\r\n  setClasses,\r\n}) => {\r\n  const handleTypeChange = useCallback(\r\n    (key, typeValue) => {\r\n      setSelectedType((prev) => ({ ...prev, [key]: typeValue }));\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        type: {\r\n          ...(prev.type || {}),\r\n          [key]: \"\",\r\n        },\r\n      }));\r\n\r\n      const rowClasses = content\r\n        .filter((item) => item.type === typeValue && item.class !== \"\")\r\n        .map((item) => ({\r\n          label: item.class,\r\n          value: item.class,\r\n        }));\r\n\r\n      setClasses((prev) => ({ ...prev, [key]: rowClasses }));\r\n    },\r\n    [content, setSelectedType, setErrors, setClasses]\r\n  );\r\n  return { handleTypeChange };\r\n};\r\n","export const basicSuccessMessage = \"Success!\";\r\nexport const basicErrorMessage = \"Something went wrong. Please try again.\";\r\nexport const generateSuccessMessage = \"Content generated successfully!\";\r\nexport const generateErrorMessage = \"Failed to generate content.\";\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport function useRows(initialRows = []) {\r\n  const [rows, setRows] = useState(initialRows);\r\n\r\n  const addRow = useCallback((extraData = {}) => {\r\n    setRows((prev) => [\r\n      ...prev,\r\n      {\r\n        key: prev.length,\r\n        ...extraData,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const removeRow = useCallback((key) => {\r\n    setRows((prev) => prev.filter((row) => row.key !== key));\r\n  }, []);\r\n\r\n  return { rows, addRow, removeRow };\r\n}\r\n"],"names":["urlRegex","useTextChange","_ref","setText","setErrors","field","handleTextChange","useCallback","key","textValue","prev","_objectSpread","text","TextArea","Input","CodeDisplay","content","scrollRef","copied","setCopied","useState","_jsxs","ref","className","id","style","marginTop","width","children","display","justifyContent","alignItems","marginBottom","_jsx","Tooltip","title","Button","icon","CopyOutlined","onClick","async","navigator","clipboard","writeText","message","success","setTimeout","err","error","type","size","value","resize","rows","readOnly","ShowMessage","messageApi","contextHolder","useMessage","showError","msg","open","showSuccess","showInfo","forwardRef","pageTitle","imageLink","errors","values","setValues","useImperativeHandle","validate","newErrors","trim","test","Object","keys","length","getValues","fields","push","label","map","htmlFor","onChange","e","handleChange","target","selectedType","setSelectedType","selectedClass","setSelectedClass","classes","setClasses","addRow","removeRow","useRows","handleTypeChange","useTypeChange","types","item","newError","forEach","row","class","concat","Select","allowClear","options","disabled","color","variant","bodyHeadingContent","useRef","bodyParagraphContent","current","_bodyHeadingContent$c","_bodyParagraphContent","heading","paragraph","_bodyHeadingContent$c2","_bodyParagraphContent2","renderContent","rowKey","headingContent","find","c","rowType","paragraphContent","_Fragment","BodyHeadingContent","el","items","headings","BodyParagraphContent","paragraphs","Collapse","backgroundColor","extra","RemoveButton","handleAddRow","props","prevPageTitle","prevPageLink","nextPageTitle","nextPageLink","newValues","CreateExcursionPage","heroContent","bodyContent","pagePrevNextLinkingContent","html","replace","MinifyHtml","renderArticle","groupKey","_ref2","join","_ref3","renderLinks","linksHtml","ExcursionPageGenerator","heroRef","bodyContentRef","pagePrevNextLinkingRef","generatedHtml","setGeneratedHtml","codeDisplayRef","Helmet","name","HeroContent","BodyContent","PagePrevNextLinking","handleSubmit","_heroRef$current","_heroRef$current$vali","_bodyContentRef$curre","_bodyContentRef$curre2","_pagePrevNextLinkingR","_pagePrevNextLinkingR2","_heroRef$current2","_heroRef$current2$get","_bodyContentRef$curre3","_bodyContentRef$curre4","_pagePrevNextLinkingR3","_pagePrevNextLinkingR4","isHeroValid","call","isBodyValid","isPagePrevNextLinkingValid","generateErrorMessage","heroRefValues","bodyContentValues","pagePrevNextLinkingValues","excursionPageHtml","_codeDisplayRef$curre","scrollIntoView","behavior","generateSuccessMessage","placement","DeleteOutlined","typeValue","rowClasses","filter","initialRows","arguments","undefined","setRows","extraData"],"sourceRoot":""}