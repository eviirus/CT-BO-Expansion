{"version":3,"file":"static/js/459.d4699a8a.chunk.js","mappings":"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","sources":["constants/urlRegex.js","hooks/useRows.jsx","utils/GenerateUniqueId.jsx","hooks/useTextChange.jsx","components/code-display/CodeDisplay.jsx","utils/ShowMessage.jsx","utils/MinifyHtml.jsx","components/buttons/RemoveButton.jsx","hooks/useTypeChange.jsx","constants/alertMessages.js","hooks/useSetFirstType.jsx","components/widgets/static-widget-generator/widget-content/title-content/TitleContent.jsx","components/widgets/static-widget-generator/widget-content/description-content/DescriptionContent.jsx","components/widgets/static-widget-generator/widget-content/button-content/ButtonContent.jsx","components/widgets/static-widget-generator/widget-content/image-content/ImageContent.jsx","components/widgets/static-widget-generator/WidgetContent.jsx","generators/widgets/static-widgets/cards-with-offers/CreateCardsWithOffers.jsx","generators/widgets/static-widgets/cards-with-offers/CreateCardsWithOffersStyles.js","components/buttons/TabButtons.jsx","components/preview/widget-preview/static-preview/WidgetStaticPreview.jsx","routes/widgets/static-widget-generator/CardsWithOffers.jsx"],"sourcesContent":["export const urlRegex = /^(https?):\\/\\/[^\\s/$.?#].[^\\s]*$/i;\r\n","import { useState, useCallback } from \"react\";\r\nimport generateUniqueId from \"../utils/GenerateUniqueId\";\r\n\r\nexport function useRows(initialRows = []) {\r\n  const [rows, setRows] = useState(initialRows);\r\n\r\n  const addRow = useCallback((extraData = {}) => {\r\n    setRows((prev) => [\r\n      ...prev,\r\n      {\r\n        key: generateUniqueId(),\r\n        ...extraData,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const removeRow = useCallback((key) => {\r\n    setRows((prev) => prev.filter((row) => row.key !== key));\r\n  }, []);\r\n\r\n  return { rows, addRow, removeRow };\r\n}\r\n","export default function generateUniqueId() {\r\n  return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n}\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useTextChange = ({ setText, setErrors, field = \"text\" }) => {\r\n  const handleTextChange = useCallback(\r\n    (key, textValue) => {\r\n      setText((prev) => ({ ...prev, [key]: textValue }));\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        [field]: {\r\n          ...(prev.text || {}),\r\n          [key]: \"\",\r\n        },\r\n      }));\r\n    },\r\n    [setText, setErrors]\r\n  );\r\n\r\n  return { handleTextChange };\r\n};\r\n","import { Input, Tooltip, Button, message } from \"antd\";\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default function CodeDisplay({ content, scrollRef }) {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(content);\r\n      setCopied(true);\r\n      message.success(\"Copied to clipboard!\");\r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (err) {\r\n      message.error(\"Failed to copy!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      ref={scrollRef}\r\n      className=\"code-display basic-col\"\r\n      id=\"codeDisplay\"\r\n      style={{ marginTop: \"20px\", width: \"100%\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"8px\",\r\n        }}\r\n      >\r\n        <h2 className=\"regular24\">Generated code</h2>\r\n        <Tooltip title={copied ? \"Copied!\" : \"Copy to clipboard\"}>\r\n          <Button\r\n            icon={<CopyOutlined />}\r\n            onClick={handleCopy}\r\n            type=\"text\"\r\n            size=\"large\"\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <TextArea value={content} style={{ resize: \"none\" }} rows={6} readOnly />\r\n    </section>\r\n  );\r\n}\r\n","import { message } from \"antd\";\r\n\r\nexport const ShowMessage = () => {\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n  const showError = (msg) => {\r\n    messageApi.open({\r\n      type: \"error\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  const showSuccess = (msg) => {\r\n    messageApi.open({\r\n      type: \"success\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  const showInfo = (msg) => {\r\n    messageApi.open({\r\n      type: \"info\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  return {\r\n    contextHolder,\r\n    showError,\r\n    showSuccess,\r\n    showInfo,\r\n  };\r\n};\r\n","export const MinifyHtml = ({ html }) => {\r\n  return html\r\n    .replace(/\\n/g, \"\") // Remove newlines\r\n    .replace(/\\s{2,}/g, \" \") // Collapse multiple spaces\r\n    .replace(/>\\s+</g, \"><\") // Remove space between tags\r\n    .trim(); // Remove leading/trailing whitespace\r\n};\r\n","import { Button, Tooltip } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst RemoveButton = ({ rowKey, removeRow }) => {\r\n  return (\r\n    <Tooltip title=\"Remove row\" placement=\"left\">\r\n      <Button\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => removeRow(rowKey)}\r\n        color=\"red\"\r\n        variant=\"outlined\"\r\n      ></Button>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default RemoveButton;\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useTypeChange = ({\r\n  content,\r\n  setSelectedType,\r\n  setErrors,\r\n  setClasses,\r\n}) => {\r\n  const handleTypeChange = useCallback(\r\n    (key, typeValue) => {\r\n      setSelectedType((prev) => ({ ...prev, [key]: typeValue }));\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        type: {\r\n          ...(prev.type || {}),\r\n          [key]: \"\",\r\n        },\r\n      }));\r\n\r\n      const rowClasses = content\r\n        .filter((item) => item.type === typeValue && item.class !== \"\")\r\n        .map((item) => ({\r\n          label: item.class,\r\n          value: item.class,\r\n        }));\r\n\r\n      setClasses((prev) => ({ ...prev, [key]: rowClasses }));\r\n    },\r\n    [content, setSelectedType, setErrors, setClasses]\r\n  );\r\n  return { handleTypeChange };\r\n};\r\n","export const basicSuccessMessage = \"Success!\";\r\nexport const basicErrorMessage = \"Something went wrong. Please try again.\";\r\nexport const generateSuccessMessage = \"Content generated successfully!\";\r\nexport const generateErrorMessage = \"Failed to generate content.\";\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useSetFirstType = ({\r\n  types,\r\n  rowKey,\r\n  selectedType,\r\n  setSelectedType,\r\n  handleTypeChange,\r\n}) => {\r\n  useEffect(() => {\r\n    if (types.length > 0 && !selectedType[rowKey]) {\r\n      const firstType = types[0].value;\r\n      setSelectedType((prev) => ({ ...prev, [rowKey]: firstType }));\r\n      handleTypeChange(rowKey, firstType);\r\n    }\r\n  }, [types, rowKey, selectedType, setSelectedType, handleTypeChange]);\r\n};\r\n","import { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { useTypeChange } from \"../../../../../hooks/useTypeChange\";\r\nimport { useTextChange } from \"../../../../../hooks/useTextChange\";\r\nimport { Select, Input } from \"antd\";\r\nimport { useSetFirstType } from \"../../../../../hooks/useSetFirstType\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst TitleContent = forwardRef(({ content, rowKey }, ref) => {\r\n  const [selectedType, setSelectedType] = useState({});\r\n  const [selectedClass, setSelectedClass] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [text, setText] = useState({});\r\n  const [errors, setErrors] = useState({ type: {}, text: {} });\r\n\r\n  const types = content.map((item) => ({\r\n    label: item.type,\r\n    value: item.type,\r\n  }));\r\n\r\n  const { handleTypeChange } = useTypeChange({\r\n    content,\r\n    setSelectedType,\r\n    setErrors,\r\n    setClasses,\r\n  });\r\n\r\n  const { handleTextChange } = useTextChange({\r\n    setText,\r\n    setErrors,\r\n  });\r\n\r\n  useSetFirstType({\r\n    types,\r\n    rowKey,\r\n    selectedType,\r\n    setSelectedType,\r\n    handleTypeChange,\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { type: {}, text: {} };\r\n\r\n      if (!selectedType[rowKey]) {\r\n        newError.type[rowKey] = \"Title type is required\";\r\n      }\r\n\r\n      if (!text[rowKey]) {\r\n        newError.text[rowKey] = \"Title content is required\";\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.type || {}).length === 0 &&\r\n        Object.keys(newError.text || {}).length === 0\r\n      );\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {};\r\n\r\n      values[rowKey] = {\r\n        type: selectedType[rowKey],\r\n        class: selectedClass[rowKey],\r\n        text: text[rowKey].trim(),\r\n      };\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <section className=\"title-content\" style={{ marginBottom: \"10px\" }}>\r\n      <div className=\"basic-row\">\r\n        <div className=\"col-gap-only\">\r\n          <label htmlFor={`titleType-${rowKey}`}>Title type</label>\r\n          <Select\r\n            id={`titleType-${rowKey}`}\r\n            style={{ width: \"150px\" }}\r\n            allowClear\r\n            options={types}\r\n            onChange={(value) => handleTypeChange(rowKey, value)}\r\n            value={selectedType[rowKey] || null}\r\n          />\r\n          {errors.type[rowKey] && (\r\n            <div className=\"error\">{errors.type[rowKey]}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"col-gap-only\">\r\n          <label htmlFor={`titleClass-${rowKey}`}>Title class</label>\r\n          <Select\r\n            id={`titleClass-${rowKey}`}\r\n            style={{ width: \"150px\" }}\r\n            allowClear\r\n            options={classes[rowKey]}\r\n            disabled={\r\n              !selectedType[rowKey] ||\r\n              !classes[rowKey] ||\r\n              classes[rowKey].length === 0\r\n            }\r\n            onChange={(value) =>\r\n              setSelectedClass((prev) => ({ ...prev, [rowKey]: value }))\r\n            }\r\n            value={selectedClass[rowKey] || null}\r\n          />\r\n        </div>\r\n        <div className=\"basic-col\">\r\n          <label htmlFor={`titleContent-${rowKey}`}>Title content</label>\r\n          <TextArea\r\n            id={`titleContent-${rowKey}`}\r\n            disabled={!selectedType[rowKey]}\r\n            rows={1}\r\n            style={{ resize: \"none\" }}\r\n            onChange={(e) => handleTextChange(rowKey, e.target.value.trim())}\r\n          ></TextArea>\r\n          {errors.text[rowKey] && selectedType[rowKey] && (\r\n            <div className=\"error\">{errors.text[rowKey]}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default TitleContent;\r\n","import { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { useTypeChange } from \"../../../../../hooks/useTypeChange\";\r\nimport { useTextChange } from \"../../../../../hooks/useTextChange\";\r\nimport { Select, Input } from \"antd\";\r\nimport { useSetFirstType } from \"../../../../../hooks/useSetFirstType\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst DescriptionContent = forwardRef(({ content, rowKey }, ref) => {\r\n  const [selectedType, setSelectedType] = useState({});\r\n  const [selectedClass, setSelectedClass] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [text, setText] = useState({});\r\n  const [errors, setErrors] = useState({ type: {}, text: {} });\r\n\r\n  const types = content.map((item) => ({\r\n    label: item.type,\r\n    value: item.type,\r\n  }));\r\n\r\n  const { handleTypeChange } = useTypeChange({\r\n    content,\r\n    setSelectedType,\r\n    setErrors,\r\n    setClasses,\r\n  });\r\n\r\n  const { handleTextChange } = useTextChange({\r\n    setText,\r\n    setErrors,\r\n  });\r\n\r\n  useSetFirstType({\r\n    types,\r\n    rowKey,\r\n    selectedType,\r\n    setSelectedType,\r\n    handleTypeChange,\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { type: {}, text: {} };\r\n\r\n      if (!selectedType[rowKey]) {\r\n        newError.type[rowKey] = \"Description type is required\";\r\n      }\r\n\r\n      if (!text[rowKey]) {\r\n        newError.text[rowKey] = \"Description content is required\";\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.type || {}).length === 0 &&\r\n        Object.keys(newError.text || {}).length === 0\r\n      );\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {};\r\n\r\n      values[rowKey] = {\r\n        type: selectedType[rowKey],\r\n        class: selectedClass[rowKey],\r\n        text: text[rowKey].trim(),\r\n      };\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <section className=\"description-content\" style={{ marginBottom: \"10px\" }}>\r\n      <div className=\"basic-row\">\r\n        <div className=\"col-gap-only\">\r\n          <label htmlFor={`descriptionType-${rowKey}`}>Description type</label>\r\n          <Select\r\n            id={`descriptionType-${rowKey}`}\r\n            style={{ width: \"150px\" }}\r\n            allowClear\r\n            options={types}\r\n            onChange={(value) => handleTypeChange(rowKey, value)}\r\n            value={selectedType[rowKey] || null}\r\n          />\r\n          {errors.type[rowKey] && (\r\n            <div className=\"error\">{errors.type[rowKey]}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"col-gap-only\">\r\n          <label htmlFor={`descriptionClass-${rowKey}`}>\r\n            Description class\r\n          </label>\r\n          <Select\r\n            id={`descriptionClass-${rowKey}`}\r\n            style={{ width: \"150px\" }}\r\n            allowClear\r\n            options={classes[rowKey]}\r\n            disabled={\r\n              !selectedType[rowKey] ||\r\n              !classes[rowKey] ||\r\n              classes[rowKey].length === 0\r\n            }\r\n            onChange={(value) =>\r\n              setSelectedClass((prev) => ({ ...prev, [rowKey]: value }))\r\n            }\r\n            value={selectedClass[rowKey] || null}\r\n          />\r\n        </div>\r\n        <div className=\"basic-col\">\r\n          <label htmlFor={`descriptionContent-${rowKey}`}>\r\n            Description content\r\n          </label>\r\n          <TextArea\r\n            id={`descriptionContent-${rowKey}`}\r\n            disabled={!selectedType[rowKey]}\r\n            rows={1}\r\n            style={{ resize: \"none\" }}\r\n            onChange={(e) => handleTextChange(rowKey, e.target.value.trim())}\r\n          ></TextArea>\r\n          {errors.text[rowKey] && selectedType[rowKey] && (\r\n            <div className=\"error\">{errors.text[rowKey]}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default DescriptionContent;\r\n","import { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { useTextChange } from \"../../../../../hooks/useTextChange\";\r\nimport { Input } from \"antd\";\r\nimport { urlRegex } from \"../../../../../constants/urlRegex\";\r\n\r\nconst ButtonContent = forwardRef(({ rowKey }, ref) => {\r\n  const [text, setText] = useState({});\r\n  const [link, setLink] = useState({});\r\n  const [errors, setErrors] = useState({ text: {}, link: {} });\r\n\r\n  const { handleTextChange } = useTextChange({\r\n    setText,\r\n    setErrors,\r\n  });\r\n\r\n  const { handleTextChange: handleLinkChange } = useTextChange({\r\n    setText: setLink,\r\n    setErrors,\r\n    field: \"link\",\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { text: {}, link: {} };\r\n\r\n      if (!text[rowKey]) {\r\n        newError.text[rowKey] = \"Button text is required\";\r\n      }\r\n\r\n      if (!link[rowKey]) {\r\n        newError.link[rowKey] = \"Button link is required\";\r\n      }\r\n\r\n      if (link[rowKey]) {\r\n        if (!urlRegex.test(link[rowKey])) {\r\n          newError.link[rowKey] = \"Please enter a valid URL\";\r\n        }\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.text || {}).length === 0 &&\r\n        Object.keys(newError.link || {}).length === 0\r\n      );\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {};\r\n\r\n      values[rowKey] = {\r\n        text: text[rowKey].trim(),\r\n        link: link[rowKey].trim(),\r\n      };\r\n\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <section className=\"button-content\" style={{ marginBottom: \"10px\" }}>\r\n      <div className=\"basic-row\">\r\n        <div className=\"col-gap-only\">\r\n          <label htmlFor={`buttonText-${rowKey}`}>Button text</label>\r\n          <Input\r\n            id={`buttonText-${rowKey}`}\r\n            style={{ width: \"320px\" }}\r\n            allowClear\r\n            onChange={(e) => handleTextChange(rowKey, e.target.value.trim())}\r\n          />\r\n          {errors.text[rowKey] && (\r\n            <div className=\"error\">{errors.text[rowKey]}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"basic-col\">\r\n          <label htmlFor={`buttonLink-${rowKey}`}>Button link</label>\r\n          <Input\r\n            id={`buttonLink-${rowKey}`}\r\n            allowClear\r\n            onChange={(e) => handleLinkChange(rowKey, e.target.value.trim())}\r\n          />\r\n          {errors.link[rowKey] && (\r\n            <div className=\"error\">{errors.link[rowKey]}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default ButtonContent;\r\n","import { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { urlRegex } from \"../../../../../constants/urlRegex\";\r\nimport { Input } from \"antd\";\r\nimport { useTextChange } from \"../../../../../hooks/useTextChange\";\r\n\r\nconst ImageContent = forwardRef(({ rowKey }, ref) => {\r\n  const [link, setLink] = useState({});\r\n  const [errors, setErrors] = useState({ link: {} });\r\n\r\n  const { handleTextChange: handleLinkChange } = useTextChange({\r\n    setText: setLink,\r\n    setErrors,\r\n    field: \"link\",\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { text: {}, link: {} };\r\n\r\n      if (!link[rowKey]) {\r\n        newError.link[rowKey] = \"Button link is required\";\r\n      }\r\n\r\n      if (link[rowKey]) {\r\n        if (!urlRegex.test(link[rowKey])) {\r\n          newError.link[rowKey] = \"Please enter a valid URL\";\r\n        }\r\n      }\r\n\r\n      setErrors(newError);\r\n      return Object.keys(newError.link || {}).length === 0;\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {};\r\n\r\n      values[rowKey] = {\r\n        link: link[rowKey].trim(),\r\n      };\r\n\r\n      return values;\r\n    },\r\n  }));\r\n  return (\r\n    <section className=\"image-content\" style={{ marginBottom: \"10px\" }}>\r\n      <div className=\"basic-row\">\r\n        <div className=\"basic-col\">\r\n          <label htmlFor={`imageLink-${rowKey}`}>Background image link</label>\r\n          <Input\r\n            id={`imageLink-${rowKey}`}\r\n            allowClear\r\n            onChange={(e) => handleLinkChange(rowKey, e.target.value.trim())}\r\n          />\r\n          {errors.link[rowKey] && (\r\n            <div className=\"error\">{errors.link[rowKey]}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default ImageContent;\r\n","import { useRef, useImperativeHandle, forwardRef } from \"react\";\r\nimport { useRows } from \"../../../hooks/useRows\";\r\nimport { Collapse, Button } from \"antd\";\r\nimport RemoveButton from \"../../buttons/RemoveButton\";\r\nimport TitleContent from \"./widget-content/title-content/TitleContent\";\r\nimport DescriptionContent from \"./widget-content/description-content/DescriptionContent\";\r\nimport ButtonContent from \"./widget-content/button-content/ButtonContent\";\r\nimport ImageContent from \"./widget-content/image-content/ImageContent\";\r\n\r\nconst WidgetContent = forwardRef(({ content }, ref) => {\r\n  const { rows, addRow, removeRow } = useRows();\r\n  const titleContent = useRef({});\r\n  const descriptionContent = useRef({});\r\n  const buttonContent = useRef({});\r\n  const imageContent = useRef({});\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const contentRefs = [\r\n        titleContent,\r\n        descriptionContent,\r\n        buttonContent,\r\n        imageContent,\r\n      ];\r\n\r\n      for (const ref of contentRefs) {\r\n        for (const key in ref.current) {\r\n          if (ref.current[key]?.validate && !ref.current[key].validate()) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {\r\n        title: {},\r\n        description: {},\r\n        button: {},\r\n        image: {},\r\n      };\r\n\r\n      for (const key of Object.keys(titleContent.current)) {\r\n        values.title[key] = titleContent.current[key]?.getValues();\r\n        values.description[key] = descriptionContent.current[key]?.getValues();\r\n        values.button[key] = buttonContent.current[key]?.getValues();\r\n        values.image[key] = imageContent.current[key]?.getValues();\r\n      }\r\n\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  const handleAddRow = () => {\r\n    addRow({ title: `Item ${rows.length + 1}` });\r\n  };\r\n\r\n  const renderContent = (rowKey) => {\r\n    const title = content.find((c) => c.rowType === \"title\");\r\n    const description = content.find((c) => c.rowType === \"description\");\r\n    const button = content.find((c) => c.rowType === \"button\");\r\n    const image = content.find((c) => c.rowType === \"image\");\r\n\r\n    return (\r\n      <>\r\n        {title && (\r\n          <TitleContent\r\n            ref={(el) => (titleContent.current[rowKey] = el)}\r\n            content={title.items.titles}\r\n            rowKey={rowKey}\r\n          />\r\n        )}\r\n        {description && (\r\n          <DescriptionContent\r\n            ref={(el) => (descriptionContent.current[rowKey] = el)}\r\n            content={description.items.descriptions}\r\n            rowKey={rowKey}\r\n          />\r\n        )}\r\n        {button && (\r\n          <ButtonContent\r\n            ref={(el) => (buttonContent.current[rowKey] = el)}\r\n            rowKey={rowKey}\r\n          />\r\n        )}\r\n        {image && (\r\n          <ImageContent\r\n            ref={(el) => (imageContent.current[rowKey] = el)}\r\n            rowKey={rowKey}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"widget-content basic-col\">\r\n      <h2 className=\"regular24\">Widget content</h2>\r\n      {rows.map((row) => (\r\n        <Collapse\r\n          style={{ backgroundColor: \"#fff\" }}\r\n          key={row.key}\r\n          items={[\r\n            {\r\n              key: row.key,\r\n              label: row.title,\r\n              children: renderContent(row.key),\r\n              extra: <RemoveButton rowKey={row.key} removeRow={removeRow} />,\r\n            },\r\n          ]}\r\n        />\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={handleAddRow}>\r\n        Add item\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default WidgetContent;\r\n","import { CreateCardsWithOffersStyles } from \"./CreateCardsWithOffersStyles\";\r\nimport { MinifyHtml } from \"../../../../utils/MinifyHtml\";\r\n\r\nexport const CreateCardsWithOffers = ({\r\n  title,\r\n  description,\r\n  button,\r\n  image,\r\n}) => {\r\n  const titles = Object.values(title || {}).filter(Boolean);\r\n  const descriptions = Object.values(description || {}).filter(Boolean);\r\n  const buttons = Object.values(button || {}).filter(Boolean);\r\n  const images = Object.values(image || {}).filter(Boolean);\r\n\r\n  const renderCards = () => {\r\n    return titles\r\n      .map((_, index) => {\r\n        const tit = Object.values(titles[index] || {})[0];\r\n        const desc = Object.values(descriptions[index] || {})[0];\r\n        const btn = Object.values(buttons[index] || {})[0];\r\n\r\n        if (!tit || !desc || !btn) return \"\";\r\n\r\n        return `\r\n        <div class=\"item\">\r\n          <div class=\"content\">\r\n              <div class=\"upper\">\r\n                  <${tit.type} class=${tit.class || \"title\"}>${tit.text}</${\r\n          tit.type\r\n        }>\r\n                  <${desc.type} class=${desc.class || \"subtitle\"}>${\r\n          desc.text\r\n        }</${desc.type}>\r\n              </div><a class=\"button\" href=\"${btn.link}\">${btn.text}</a>\r\n          </div>\r\n      </div>`;\r\n      })\r\n      .join(\"\");\r\n  };\r\n\r\n  const generateImageStyles = () => {\r\n    let styles = `<style>`;\r\n\r\n    images.forEach((imgs, index) => {\r\n      const img = Object.values(imgs || {})[0];\r\n      if (img?.link) {\r\n        styles += `.sr-offers .item:nth-child(${index + 1}) {\r\n          background-image: url(${img.link});\r\n        }`;\r\n      }\r\n    });\r\n\r\n    styles += `</style>`;\r\n    return styles;\r\n  };\r\n\r\n  return MinifyHtml({\r\n    html: `\r\n    ${CreateCardsWithOffersStyles}\r\n    ${generateImageStyles()}\r\n    <section class=\"sr-offers\">\r\n      ${renderCards()}\r\n    </section>\r\n    `,\r\n  });\r\n};\r\n","export const CreateCardsWithOffersStyles = `<style>\r\n    .sr-offers{display:flex;gap:16px;align-items:center;justify-content:center}.sr-offers .item{background-size:cover;background-position:center;height:245px;width:100%;flex:1;border-radius:24px}.sr-offers .item .content{display:flex;flex-direction:column;justify-content:space-between;padding:16px;border-radius:24px;height:245px;box-sizing:border-box;background-color:rgba(0,0,0,.35);color:#fff}.sr-offers .item .content .title{margin:0;font-size:22px;font-weight:600}.sr-offers .item .content .subtitle{margin:0;font-size:14px;font-weight:400}.sr-offers .item .content .button{color:#000!important;text-decoration:none!important;background-color:#fff;border-radius:99999px;padding:14px 24px;display:flex;align-items:center;justify-content:center;width:fit-content;transition:background-color .3s}.sr-offers .item .content .button:hover{background-color:#d9d9d9}@media (max-width:1000px){.sr-offers{display:grid;grid-template-columns:repeat(2,1fr);column-gap:16px;row-gap:16px}}@media (max-width:600px){.sr-offers{display:flex;flex-direction:column;gap:16px;justify-content:center;align-items:center}}\r\n</style>`;\r\n","import { Tabs } from \"antd\";\r\n\r\nexport default function TabButtons({ items }) {\r\n  const tabItems = items.map((item, index) => ({\r\n    key: String(index),\r\n    label: item.label,\r\n    children: item.children,\r\n  }));\r\n\r\n  return <Tabs defaultActiveKey=\"0\" items={tabItems} />;\r\n}\r\n","import TabButtons from \"../../../buttons/TabButtons\";\r\n\r\nexport default function WidgetStaticPreview({ desktopImage, mobileImage }) {\r\n  const tabItems = [\r\n    {\r\n      label: \"Desktop\",\r\n      children: (\r\n        <img\r\n          src={desktopImage}\r\n          style={{ width: \"100%\", boxSizing: \"border-box\" }}\r\n          loading=\"lazy\"\r\n          alt=\"Desktop preview\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Mobile\",\r\n      children: (\r\n        <img\r\n          src={mobileImage}\r\n          style={{\r\n            width: \"auto\",\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n            boxSizing: \"border-box\",\r\n          }}\r\n          loading=\"lazy\"\r\n          alt=\"Mobile preview\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"widget-static-preview basic-col\">\r\n      <h2 className=\"regular24\">Widget static preview</h2>\r\n      <TabButtons items={tabItems} />\r\n    </section>\r\n  );\r\n}\r\n","import { Helmet } from \"react-helmet-async\";\r\nimport { useRef, useState } from \"react\";\r\nimport WidgetContent from \"../../../components/widgets/static-widget-generator/WidgetContent\";\r\nimport { ShowMessage } from \"../../../utils/ShowMessage\";\r\nimport {\r\n  generateErrorMessage,\r\n  generateSuccessMessage,\r\n} from \"../../../constants/alertMessages\";\r\nimport { Button } from \"antd\";\r\nimport CodeDisplay from \"../../../components/code-display/CodeDisplay\";\r\nimport { CreateCardsWithOffers } from \"../../../generators/widgets/static-widgets/cards-with-offers/CreateCardsWithOffers\";\r\nimport WidgetStaticPreview from \"../../../components/preview/widget-preview/static-preview/WidgetStaticPreview\";\r\n\r\nimport cardsWithOffersDesktop from \"../../../assets/images/widgets/cardsWithOffers-desktop.png\";\r\nimport cardsWithOffersMobile from \"../../../assets/images/widgets/cardsWithOffers-mobile.png\";\r\n\r\nexport default function ExcursionPageGenerator() {\r\n  const pageTitle = \"Cards with offers\";\r\n  const widgetContentRef = useRef();\r\n  const [generatedHtml, setGeneratedHtml] = useState(\"\");\r\n  const codeDisplayRef = useRef(null);\r\n  const { contextHolder, showError, showSuccess } = ShowMessage();\r\n\r\n  const content = [\r\n    {\r\n      rowType: \"title\",\r\n      items: {\r\n        titles: [\r\n          {\r\n            type: \"p\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h2\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h3\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h4\",\r\n            class: \"\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      rowType: \"description\",\r\n      items: {\r\n        descriptions: [\r\n          {\r\n            type: \"p\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"span\",\r\n            class: \"\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      rowType: \"button\",\r\n    },\r\n    {\r\n      rowType: \"image\",\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = () => {\r\n    const isWidgetContentValid = widgetContentRef.current?.validate?.();\r\n    if (!isWidgetContentValid) {\r\n      showError(generateErrorMessage);\r\n      return;\r\n    }\r\n    const widgetContentValues = widgetContentRef.current?.getValues?.();\r\n\r\n    const cardsWithOffersHtml = CreateCardsWithOffers({\r\n      title: widgetContentValues.title,\r\n      description: widgetContentValues.description,\r\n      button: widgetContentValues.button,\r\n      image: widgetContentValues.image,\r\n    });\r\n\r\n    setGeneratedHtml(cardsWithOffersHtml);\r\n\r\n    setTimeout(() => {\r\n      codeDisplayRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 100);\r\n    showSuccess(generateSuccessMessage);\r\n  };\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"title\" content={pageTitle} />\r\n      </Helmet>\r\n      <h1 className=\"regular28\">Cards with offers generator</h1>\r\n      <WidgetStaticPreview\r\n        desktopImage={cardsWithOffersDesktop}\r\n        mobileImage={cardsWithOffersMobile}\r\n      />\r\n      <WidgetContent ref={widgetContentRef} content={content} />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        type=\"primary\"\r\n        style={{ marginTop: \"20px\", width: \"100%\" }}\r\n      >\r\n        Generate cards with offers\r\n      </Button>\r\n      {generatedHtml && (\r\n        <CodeDisplay content={generatedHtml} scrollRef={codeDisplayRef} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["urlRegex","useRows","initialRows","arguments","length","undefined","rows","setRows","useState","addRow","useCallback","extraData","prev","_objectSpread","key","concat","Date","now","Math","random","toString","substr","removeRow","filter","row","useTextChange","_ref","setText","setErrors","field","handleTextChange","textValue","text","TextArea","Input","CodeDisplay","content","scrollRef","copied","setCopied","_jsxs","ref","className","id","style","marginTop","width","children","display","justifyContent","alignItems","marginBottom","_jsx","Tooltip","title","Button","icon","CopyOutlined","onClick","async","navigator","clipboard","writeText","message","success","setTimeout","err","error","type","size","value","resize","readOnly","ShowMessage","messageApi","contextHolder","useMessage","showError","msg","open","showSuccess","showInfo","MinifyHtml","html","replace","trim","rowKey","placement","DeleteOutlined","color","variant","useTypeChange","setSelectedType","setClasses","handleTypeChange","typeValue","rowClasses","item","class","map","label","generateSuccessMessage","generateErrorMessage","useSetFirstType","types","selectedType","useEffect","firstType","forwardRef","selectedClass","setSelectedClass","classes","errors","useImperativeHandle","validate","newError","Object","keys","getValues","values","htmlFor","Select","allowClear","options","onChange","disabled","e","target","link","setLink","handleLinkChange","test","titleContent","useRef","descriptionContent","buttonContent","imageContent","contentRefs","current","_ref$current$key","description","button","image","_titleContent$current","_descriptionContent$c","_buttonContent$curren","_imageContent$current","renderContent","find","c","rowType","_Fragment","TitleContent","el","items","titles","DescriptionContent","descriptions","ButtonContent","ImageContent","Collapse","backgroundColor","extra","RemoveButton","handleAddRow","CreateCardsWithOffers","Boolean","buttons","images","generateImageStyles","styles","forEach","imgs","index","img","_","tit","desc","btn","join","TabButtons","tabItems","String","Tabs","defaultActiveKey","WidgetStaticPreview","desktopImage","mobileImage","src","boxSizing","loading","alt","maxWidth","height","ExcursionPageGenerator","pageTitle","widgetContentRef","generatedHtml","setGeneratedHtml","codeDisplayRef","Helmet","name","cardsWithOffersDesktop","cardsWithOffersMobile","WidgetContent","handleSubmit","_widgetContentRef$cur","_widgetContentRef$cur2","_widgetContentRef$cur3","_widgetContentRef$cur4","call","widgetContentValues","cardsWithOffersHtml","_codeDisplayRef$curre","scrollIntoView","behavior"],"sourceRoot":""}