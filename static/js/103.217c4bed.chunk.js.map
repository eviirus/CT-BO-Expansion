{"version":3,"file":"static/js/103.217c4bed.chunk.js","mappings":"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","sources":["constants/urlRegex.js","hooks/useRows.jsx","utils/GenerateUniqueId.jsx","hooks/useTextChange.jsx","components/code-display/CodeDisplay.jsx","utils/ShowMessage.jsx","utils/MinifyHtml.jsx","components/buttons/RemoveButton.jsx","hooks/useTypeChange.jsx","constants/alertMessages.js","components/landing-pages/hero-content/HeroContent.jsx","components/landing-pages/body-content/heading-content/BodyHeadingContent.jsx","components/landing-pages/body-content/paragraph-content/BodyParagraphContent.jsx","components/landing-pages/body-content/BodyContent.jsx","components/landing-pages/page-prev-next-linking/PagePrevNextLinking.jsx","generators/landing-pages/create-excursion-page/CreateExcursionPage.jsx","generators/landing-pages/create-excursion-page/CreateExcursionPageStyles.js","routes/landing-pages/excursions/ExcursionPageGenerator.jsx"],"sourcesContent":["export const urlRegex = /^(https?):\\/\\/[^\\s/$.?#].[^\\s]*$/i;\r\n","import { useState, useCallback } from \"react\";\r\nimport generateUniqueId from \"../utils/GenerateUniqueId\";\r\n\r\nexport function useRows(initialRows = []) {\r\n  const [rows, setRows] = useState(initialRows);\r\n\r\n  const addRow = useCallback((extraData = {}) => {\r\n    setRows((prev) => [\r\n      ...prev,\r\n      {\r\n        key: generateUniqueId(),\r\n        ...extraData,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const removeRow = useCallback((key) => {\r\n    setRows((prev) => prev.filter((row) => row.key !== key));\r\n  }, []);\r\n\r\n  return { rows, addRow, removeRow };\r\n}\r\n","export default function generateUniqueId() {\r\n  return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n}\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useTextChange = ({ setText, setErrors, field = \"text\" }) => {\r\n  const handleTextChange = useCallback(\r\n    (key, textValue) => {\r\n      setText((prev) => ({ ...prev, [key]: textValue }));\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        [field]: {\r\n          ...(prev.text || {}),\r\n          [key]: \"\",\r\n        },\r\n      }));\r\n    },\r\n    [setText, setErrors]\r\n  );\r\n\r\n  return { handleTextChange };\r\n};\r\n","import { Input, Tooltip, Button, message } from \"antd\";\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default function CodeDisplay({ content, scrollRef }) {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(content);\r\n      setCopied(true);\r\n      message.success(\"Copied to clipboard!\");\r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (err) {\r\n      message.error(\"Failed to copy!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      ref={scrollRef}\r\n      className=\"code-display basic-col\"\r\n      id=\"codeDisplay\"\r\n      style={{ marginTop: \"20px\", width: \"100%\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"8px\",\r\n        }}\r\n      >\r\n        <h2 className=\"regular24\">Generated code</h2>\r\n        <Tooltip title={copied ? \"Copied!\" : \"Copy to clipboard\"}>\r\n          <Button\r\n            icon={<CopyOutlined />}\r\n            onClick={handleCopy}\r\n            type=\"text\"\r\n            size=\"large\"\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <TextArea value={content} style={{ resize: \"none\" }} rows={6} readOnly />\r\n    </section>\r\n  );\r\n}\r\n","import { message } from \"antd\";\r\n\r\nexport const ShowMessage = () => {\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n  const showError = (msg) => {\r\n    messageApi.open({\r\n      type: \"error\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  const showSuccess = (msg) => {\r\n    messageApi.open({\r\n      type: \"success\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  const showInfo = (msg) => {\r\n    messageApi.open({\r\n      type: \"info\",\r\n      content: msg,\r\n    });\r\n  };\r\n\r\n  return {\r\n    contextHolder,\r\n    showError,\r\n    showSuccess,\r\n    showInfo,\r\n  };\r\n};\r\n","export const MinifyHtml = ({ html }) => {\r\n  return html\r\n    .replace(/\\n/g, \"\") // Remove newlines\r\n    .replace(/\\s{2,}/g, \" \") // Collapse multiple spaces\r\n    .replace(/>\\s+</g, \"><\") // Remove space between tags\r\n    .trim(); // Remove leading/trailing whitespace\r\n};\r\n","import { Button, Tooltip } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst RemoveButton = ({ rowKey, removeRow }) => {\r\n  return (\r\n    <Tooltip title=\"Remove row\" placement=\"left\">\r\n      <Button\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => removeRow(rowKey)}\r\n        color=\"red\"\r\n        variant=\"outlined\"\r\n      ></Button>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default RemoveButton;\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useTypeChange = ({\r\n  content,\r\n  setSelectedType,\r\n  setErrors,\r\n  setClasses,\r\n}) => {\r\n  const handleTypeChange = useCallback(\r\n    (key, typeValue) => {\r\n      setSelectedType((prev) => ({ ...prev, [key]: typeValue }));\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        type: {\r\n          ...(prev.type || {}),\r\n          [key]: \"\",\r\n        },\r\n      }));\r\n\r\n      const rowClasses = content\r\n        .filter((item) => item.type === typeValue && item.class !== \"\")\r\n        .map((item) => ({\r\n          label: item.class,\r\n          value: item.class,\r\n        }));\r\n\r\n      setClasses((prev) => ({ ...prev, [key]: rowClasses }));\r\n    },\r\n    [content, setSelectedType, setErrors, setClasses]\r\n  );\r\n  return { handleTypeChange };\r\n};\r\n","export const basicSuccessMessage = \"Success!\";\r\nexport const basicErrorMessage = \"Something went wrong. Please try again.\";\r\nexport const generateSuccessMessage = \"Content generated successfully!\";\r\nexport const generateErrorMessage = \"Failed to generate content.\";\r\n","import { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport \"./HeroContent.css\";\r\nimport { urlRegex } from \"../../../constants/urlRegex\";\r\n\r\nconst HeroContent = forwardRef(({ pageTitle, imageLink }, ref) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [values, setValues] = useState({\r\n    pageTitle: \"\",\r\n    imageLink: \"\",\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newErrors = {};\r\n\r\n      if (imageLink && values.imageLink.trim() !== \"\") {\r\n        if (!urlRegex.test(values.imageLink)) {\r\n          newErrors.imageLink = \"Please enter a valid URL\";\r\n        }\r\n      } else if (imageLink && values.imageLink.trim() === \"\") {\r\n        newErrors.imageLink = \"Image link is required\";\r\n      }\r\n\r\n      if (pageTitle && values.pageTitle.trim() === \"\") {\r\n        newErrors.pageTitle = \"Page title is required\";\r\n      }\r\n\r\n      setErrors(newErrors);\r\n      return Object.keys(newErrors).length === 0;\r\n    },\r\n\r\n    getValues: () => values,\r\n  }));\r\n\r\n  const handleChange = (key, value) => {\r\n    setValues((prev) => ({ ...prev, [key]: value }));\r\n    setErrors((prev) => ({ ...prev, [key]: \"\" }));\r\n  };\r\n\r\n  const fields = [];\r\n\r\n  if (pageTitle) {\r\n    fields.push({ label: \"Page title\", key: \"pageTitle\" });\r\n  }\r\n\r\n  if (imageLink) {\r\n    fields.push({ label: \"Image link\", key: \"imageLink\" });\r\n  }\r\n\r\n  return (\r\n    <section className=\"hero-content basic-col\">\r\n      <h2 className=\"regular24\">Hero content</h2>\r\n      <div className=\"content\">\r\n        {fields.map((field) => (\r\n          <div key={field.key} className=\"input\">\r\n            <label htmlFor={field.key}>{field.label}</label>\r\n            <Input\r\n              id={field.key}\r\n              value={values[field.key]}\r\n              onChange={(e) => handleChange(field.key, e.target.value)}\r\n            />\r\n            {errors[field.key] && (\r\n              <div className=\"error\">{errors[field.key]}</div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default HeroContent;\r\n","import { Select, Input, Button } from \"antd\";\r\nimport \"../BodyContent.css\";\r\nimport { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { useRows } from \"../../../../hooks/useRows\";\r\nimport { useTypeChange } from \"../../../../hooks/useTypeChange\";\r\nimport { useTextChange } from \"../../../../hooks/useTextChange\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst BodyHeadingContent = forwardRef(({ content }, ref) => {\r\n  const [selectedType, setSelectedType] = useState({});\r\n  const [selectedClass, setSelectedClass] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [text, setText] = useState({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n  const [errors, setErrors] = useState({ type: {}, text: {} });\r\n\r\n  const { handleTypeChange } = useTypeChange({\r\n    content,\r\n    setSelectedType,\r\n    setErrors,\r\n    setClasses,\r\n  });\r\n\r\n  const { handleTextChange } = useTextChange({\r\n    setText,\r\n    setErrors,\r\n  });\r\n\r\n  const types = content.map((item) => ({\r\n    label: item.type,\r\n    value: item.type,\r\n  }));\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { type: {}, text: {} };\r\n\r\n      if (rows.length !== 0) {\r\n        rows.forEach((row) => {\r\n          if (!selectedType[row.key]) {\r\n            newError.type[row.key] = \"Heading type is required\";\r\n          }\r\n\r\n          if (!text[row.key]) {\r\n            newError.text[row.key] = \"Heading content is required\";\r\n          }\r\n        });\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.type || {}).length === 0 &&\r\n        Object.keys(newError.text || {}).length === 0\r\n      );\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {};\r\n      rows.forEach((row) => {\r\n        values[row.key] = {\r\n          type: selectedType[row.key],\r\n          class: selectedClass[row.key],\r\n          text: text[row.key],\r\n        };\r\n      });\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <section className=\"heading-content\">\r\n      {rows.map((row) => (\r\n        <div className=\"basic-row\" key={row.key}>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`headingType-${row.key}`}>Heading type</label>\r\n            <Select\r\n              id={`headingType-${row.key}`}\r\n              style={{ width: \"150px\" }}\r\n              allowClear\r\n              options={types}\r\n              onChange={(value) => handleTypeChange(row.key, value)}\r\n              value={selectedType[row.key] || null}\r\n            />\r\n            {errors.type[row.key] && (\r\n              <div className=\"error\">{errors.type[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`headingClass-${row.key}`}>Heading class</label>\r\n            <Select\r\n              id={`headingClass-${row.key}`}\r\n              style={{ width: \"300px\" }}\r\n              allowClear\r\n              options={classes[row.key]}\r\n              disabled={\r\n                !selectedType[row.key] ||\r\n                !classes[row.key] ||\r\n                classes[row.key].length === 0\r\n              }\r\n              onChange={(value) =>\r\n                setSelectedClass((prev) => ({ ...prev, [row.key]: value }))\r\n              }\r\n              value={selectedClass[row.key] || null}\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor={`headingContent-${row.key}`}>Heading content</label>\r\n            <TextArea\r\n              id={`headingContent-${row.key}`}\r\n              disabled={!selectedType[row.key]}\r\n              rows={1}\r\n              style={{ resize: \"none\" }}\r\n              onChange={(e) => handleTextChange(row.key, e.target.value)}\r\n            ></TextArea>\r\n            {errors.text[row.key] && selectedType[row.key] && (\r\n              <div className=\"error\">{errors.text[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <Button\r\n            color=\"red\"\r\n            variant=\"outlined\"\r\n            onClick={() => removeRow(row.key)}\r\n            style={{ marginTop: \"29px\" }}\r\n          >\r\n            Remove heading row\r\n          </Button>\r\n        </div>\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={() => addRow()}>\r\n        Add heading row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyHeadingContent;\r\n","import { Select, Input, Button } from \"antd\";\r\nimport \"../BodyContent.css\";\r\nimport { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { useRows } from \"../../../../hooks/useRows\";\r\nimport { useTypeChange } from \"../../../../hooks/useTypeChange\";\r\nimport { useTextChange } from \"../../../../hooks/useTextChange\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst BodyParagraphContent = forwardRef(({ content }, ref) => {\r\n  const [selectedType, setSelectedType] = useState({});\r\n  const [selectedClass, setSelectedClass] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [text, setText] = useState({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n  const [errors, setErrors] = useState({ type: {}, text: {} });\r\n\r\n  const { handleTypeChange } = useTypeChange({\r\n    content,\r\n    setSelectedType,\r\n    setErrors,\r\n    setClasses,\r\n  });\r\n\r\n  const { handleTextChange } = useTextChange({\r\n    setText,\r\n    setErrors,\r\n  });\r\n\r\n  const types = content.map((item) => ({\r\n    label: item.type,\r\n    value: item.type,\r\n  }));\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { type: {}, text: {} };\r\n\r\n      if (rows.length !== 0) {\r\n        rows.forEach((row) => {\r\n          if (!selectedType[row.key]) {\r\n            newError.type[row.key] = \"Paragraph type is required\";\r\n          }\r\n\r\n          if (!text[row.key]) {\r\n            newError.text[row.key] = \"Paragraph content is required\";\r\n          }\r\n        });\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.type || {}).length === 0 &&\r\n        Object.keys(newError.text || {}).length === 0\r\n      );\r\n    },\r\n    getValues: () => {\r\n      const values = {};\r\n      rows.forEach((row) => {\r\n        values[row.key] = {\r\n          type: selectedType[row.key],\r\n          class: selectedClass[row.key],\r\n          text: text[row.key],\r\n        };\r\n      });\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <section className=\"paragraph-content\">\r\n      {rows.map((row) => (\r\n        <div className=\"basic-row\" key={row.key}>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`paragraphType-${row.key}`}>Paragraph type</label>\r\n            <Select\r\n              id={`paragraphType-${row.key}`}\r\n              style={{ width: \"150px\" }}\r\n              allowClear\r\n              options={types}\r\n              onChange={(value) => handleTypeChange(row.key, value)}\r\n              value={selectedType[row.key] || null}\r\n            />\r\n            {errors.type[row.key] && (\r\n              <div className=\"error\">{errors.type[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`paragraphClass-${row.key}`}>Paragraph class</label>\r\n            <Select\r\n              id={`paragraphClass-${row.key}`}\r\n              style={{ width: \"300px\" }}\r\n              allowClear\r\n              options={classes[row.key]}\r\n              disabled={\r\n                !selectedType[row.key] ||\r\n                !classes[row.key] ||\r\n                classes[row.key].length === 0\r\n              }\r\n              onChange={(value) =>\r\n                setSelectedClass((prev) => ({ ...prev, [row.key]: value }))\r\n              }\r\n              value={selectedClass[row.key] || null}\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor={`paragraphContent-${row.key}`}>\r\n              Paragraph content\r\n            </label>\r\n            <TextArea\r\n              id={`paragraphContent-${row.key}`}\r\n              disabled={!selectedType[row.key]}\r\n              rows={4}\r\n              style={{ resize: \"none\" }}\r\n              onChange={(e) => handleTextChange(row.key, e.target.value)}\r\n            ></TextArea>\r\n            {errors.text[row.key] && selectedType[row.key] && (\r\n              <div className=\"error\">{errors.text[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <Button\r\n            color=\"red\"\r\n            variant=\"outlined\"\r\n            onClick={() => removeRow(row.key)}\r\n            style={{ marginTop: \"29px\" }}\r\n          >\r\n            Remove paragraph row\r\n          </Button>\r\n        </div>\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={() => addRow()}>\r\n        Add paragraph row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyParagraphContent;\r\n","import { Button, Collapse } from \"antd\";\r\nimport BodyHeadingContent from \"./heading-content/BodyHeadingContent\";\r\nimport BodyParagraphContent from \"./paragraph-content/BodyParagraphContent\";\r\nimport \"./BodyContent.css\";\r\nimport { useRows } from \"../../../hooks/useRows\";\r\nimport { useRef, useImperativeHandle, forwardRef } from \"react\";\r\nimport RemoveButton from \"../../buttons/RemoveButton\";\r\n\r\nconst BodyContent = forwardRef(({ content }, ref) => {\r\n  const bodyHeadingContent = useRef({});\r\n  const bodyParagraphContent = useRef({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      for (const key in bodyHeadingContent.current) {\r\n        if (bodyHeadingContent.current[key]?.validate) {\r\n          const valid = bodyHeadingContent.current[key].validate();\r\n          if (!valid) return false;\r\n        }\r\n      }\r\n\r\n      for (const key in bodyParagraphContent.current) {\r\n        if (bodyParagraphContent.current[key]?.validate) {\r\n          const valid = bodyParagraphContent.current[key].validate();\r\n          if (!valid) return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {\r\n        heading: {},\r\n        paragraph: {},\r\n      };\r\n      for (const key in bodyHeadingContent.current) {\r\n        if (bodyHeadingContent.current[key]?.getValues) {\r\n          values.heading[key] = bodyHeadingContent.current[key].getValues();\r\n        }\r\n      }\r\n\r\n      for (const key in bodyParagraphContent.current) {\r\n        if (bodyParagraphContent.current[key]?.getValues) {\r\n          values.paragraph[key] = bodyParagraphContent.current[key].getValues();\r\n        }\r\n      }\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  const handleAddRow = () => {\r\n    addRow({ title: `Row ${rows.length + 1}` });\r\n  };\r\n\r\n  const renderContent = (rowKey) => {\r\n    const headingContent = content.find((c) => c.rowType === \"heading\");\r\n    const paragraphContent = content.find((c) => c.rowType === \"paragraph\");\r\n\r\n    return (\r\n      <>\r\n        {headingContent && (\r\n          <BodyHeadingContent\r\n            ref={(el) => (bodyHeadingContent.current[rowKey] = el)}\r\n            content={headingContent.items.headings}\r\n          />\r\n        )}\r\n        {paragraphContent && (\r\n          <BodyParagraphContent\r\n            ref={(el) => (bodyParagraphContent.current[rowKey] = el)}\r\n            content={paragraphContent.items.paragraphs}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"body-content basic-col\">\r\n      <h2 className=\"regular24\">Body content</h2>\r\n      {rows.map((row) => (\r\n        <Collapse\r\n          style={{ backgroundColor: \"#fff\" }}\r\n          key={row.key}\r\n          items={[\r\n            {\r\n              key: row.key,\r\n              label: row.title,\r\n              children: renderContent(row.key),\r\n              extra: <RemoveButton rowKey={row.key} removeRow={removeRow} />,\r\n            },\r\n          ]}\r\n        />\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={handleAddRow}>\r\n        Add row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyContent;\r\n","import { Input } from \"antd\";\r\nimport { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { urlRegex } from \"../../../constants/urlRegex\";\r\n\r\nconst PagePrevNextLinking = forwardRef((props, ref) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [values, setValues] = useState({\r\n    prevPageTitle: \"\",\r\n    prevPageLink: \"\",\r\n    nextPageTitle: \"\",\r\n    nextPageLink: \"\",\r\n  });\r\n\r\n  const handleChange = (key, value) => {\r\n    setValues((prev) => {\r\n      const newValues = { ...prev, [key]: value };\r\n\r\n      if (\r\n        (key === \"prevPageTitle\" || key === \"nextPageTitle\") &&\r\n        value === \"\"\r\n      ) {\r\n        if (key === \"prevPageTitle\") {\r\n          newValues.prevPageLink = \"\";\r\n        } else if (key === \"nextPageTitle\") {\r\n          newValues.nextPageLink = \"\";\r\n        }\r\n      }\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newErrors = {};\r\n\r\n      if (values.prevPageTitle.trim() !== \"\") {\r\n        if (values.prevPageLink.trim() === \"\") {\r\n          newErrors.prevPageLink =\r\n            \"Previous page link is required. Add it or remove previous page title\";\r\n        } else if (values.prevPageLink.trim() !== \"\") {\r\n          if (!urlRegex.test(values.prevPageLink)) {\r\n            newErrors.prevPageLink = \"Please enter a valid URL\";\r\n          }\r\n        }\r\n      }\r\n\r\n      if (values.nextPageTitle.trim() !== \"\") {\r\n        if (values.nextPageLink.trim() === \"\") {\r\n          newErrors.nextPageLink =\r\n            \"Next page link is required. Add it or remove next page title\";\r\n        } else if (values.nextPageLink.trim() !== \"\") {\r\n          if (!urlRegex.test(values.nextPageLink)) {\r\n            newErrors.nextPageLink = \"Please enter a valid URL\";\r\n          }\r\n        }\r\n      }\r\n\r\n      setErrors(newErrors);\r\n      return Object.keys(newErrors).length === 0;\r\n    },\r\n\r\n    getValues: () => values,\r\n  }));\r\n\r\n  return (\r\n    <section className=\"page-prev-next-linking basic-col\">\r\n      <h2 className=\"regular24\">Linking</h2>\r\n      <div className=\"basic-row\">\r\n        <div className=\"basic-col\">\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"prevPageTitle\">Previous page title</label>\r\n            <Input\r\n              value={values.prevPageTitle}\r\n              onChange={(value) =>\r\n                handleChange(\"prevPageTitle\", value.target.value)\r\n              }\r\n              allowClear\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"prevPageLink\">Previous page link</label>\r\n            <Input\r\n              value={values.prevPageLink}\r\n              onChange={(value) =>\r\n                handleChange(\"prevPageLink\", value.target.value)\r\n              }\r\n              disabled={!values.prevPageTitle.trim()}\r\n              allowClear\r\n            />\r\n            {errors.prevPageLink && (\r\n              <div className=\"error\">{errors.prevPageLink}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"basic-col\">\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"nextPageTitle\">Next page title</label>\r\n            <Input\r\n              value={values.nextPageTitle}\r\n              onChange={(value) =>\r\n                handleChange(\"nextPageTitle\", value.target.value)\r\n              }\r\n              allowClear\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"nextPageLink\">Next page link</label>\r\n            <Input\r\n              value={values.nextPageLink}\r\n              onChange={(value) =>\r\n                handleChange(\"nextPageLink\", value.target.value)\r\n              }\r\n              disabled={!values.nextPageTitle.trim()}\r\n              allowClear\r\n            />\r\n            {errors.nextPageLink && (\r\n              <div className=\"error\">{errors.nextPageLink}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default PagePrevNextLinking;\r\n","import { CreateExcursionPageStyles } from \"./CreateExcursionPageStyles\";\r\nimport { MinifyHtml } from \"../../../utils/MinifyHtml\";\r\n\r\nexport const CreateExcursionPage = ({\r\n  heroContent,\r\n  bodyContent,\r\n  pagePrevNextLinkingContent,\r\n}) => {\r\n  const { pageTitle, imageLink } = heroContent;\r\n\r\n  const renderArticle = () => {\r\n    const heading = bodyContent.heading || {};\r\n    const paragraph = bodyContent.paragraph || {};\r\n\r\n    return Object.keys(heading).map((groupKey) => {\r\n      return `\r\n        <article>\r\n          ${Object.values(heading[groupKey])\r\n            .map(({ type, text, class: className }) => {\r\n              if (type === \"p\" && className) {\r\n                return `<p><strong class=\"${className}\">${text}</strong></p>`;\r\n              }\r\n              return `<${type}>${text}</${type}>`;\r\n            })\r\n            .join(\"\\n\")}\r\n          ${\r\n            paragraph[groupKey]\r\n              ? Object.values(paragraph[groupKey])\r\n                  .map(({ type, text }) => {\r\n                    return `<${type}>${text}</${type}>`;\r\n                  })\r\n                  .join(\"\\n\")\r\n              : \"\"\r\n          }\r\n        </article>\r\n      `;\r\n    });\r\n  };\r\n\r\n  const renderLinks = () => {\r\n    const { prevPageTitle, prevPageLink, nextPageTitle, nextPageLink } =\r\n      pagePrevNextLinkingContent;\r\n\r\n    const linksHtml = [];\r\n\r\n    if (prevPageTitle) {\r\n      linksHtml.push(`\r\n        <a class=\"prev-excursion-container\" href=${prevPageLink} style=\"text-decoration:none;color:#000\">\r\n            <div class=\"prev-excursion-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                    <path d=\"M15 6L9 12L15 18\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\r\n                </svg></div>\r\n                <span class=\"prev-excursion-title\">${prevPageTitle}</span>\r\n        </a>\r\n        `);\r\n    }\r\n\r\n    if (nextPageTitle) {\r\n      linksHtml.push(`\r\n        <a class=\"next-excursion-container\" href=${nextPageLink} style=\"text-decoration:none;color:#000\">\r\n            \r\n                <span class=\"next-excursion-title\">${nextPageTitle}</span>\r\n                <div class=\"next-excursion-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                    <path d=\"M9 6L15 12L9 18\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\r\n                </svg></div>\r\n        </a>\r\n        `);\r\n    }\r\n\r\n    return linksHtml.join(\"\\n\");\r\n  };\r\n\r\n  return MinifyHtml({\r\n    html: `\r\n  ${CreateExcursionPageStyles}\r\n    <section class=\"excursion-main-container\">\r\n      <h1 class=\"excursion-heading\">${pageTitle}</h1>\r\n      <div class=\"excursion-image-container\">\r\n        <img\r\n          src=\"${imageLink}\"\r\n          loading=\"eager\"\r\n          fetchpriority=\"high\"\r\n          alt=\"${pageTitle}\"\r\n        />\r\n      </div>\r\n\r\n      <article class=\"excursion-article-section\">\r\n        ${renderArticle().join(\"\\n\")}\r\n      </article>\r\n\r\n      <div class=\"buttons-container\">\r\n        ${renderLinks()}\r\n      </div>\r\n    </section>\r\n  `,\r\n  });\r\n};\r\n","export const CreateExcursionPageStyles = `<style>\r\n    .excursion-main-container{max-width:1030px!important;width:100%;margin:0 auto}.excursion-article-section h3,.paragraph-to-heading{font-size:1.5em;margin-block-start:.83em;margin-block-end:.83em}.excursion-heading{text-align:center;line-height:46px;font-size:38px;display:flex;justify-content:center;font-weight:600;color:rgba(0,0,0,.85);margin-bottom:calc(.5em + 24px);margin-top:25px}.excursion-image-container img{border-radius:24px;width:100%;height:480px}.buttons-container{display:inline-flex;align-items:center;justify-content:space-between;width:100%}.next-excursion-icon,.prev-excursion-icon{width:25px;height:25px}@media (max-width:1024px){.excursion-image-container img{height:auto}}.next-excursion-container,.prev-excursion-container{display:inline-flex;width:100%;align-items:center;justify-content:flex-end;margin:30px 0;gap:5px}.prev-excursion-container{justify-content:flex-start}.next-excursion-title,.prev-excursion-title{font-size:16px;font-weight:600;margin:0}\r\n</style>`;\r\n","import { Helmet } from \"react-helmet-async\";\r\nimport { useRef, useState } from \"react\";\r\nimport HeroContent from \"../../../components/landing-pages/hero-content/HeroContent\";\r\nimport BodyContent from \"../../../components/landing-pages/body-content/BodyContent\";\r\nimport PagePrevNextLinking from \"../../../components/landing-pages/page-prev-next-linking/PagePrevNextLinking\";\r\nimport {\r\n  generateErrorMessage,\r\n  generateSuccessMessage,\r\n} from \"../../../constants/alertMessages\";\r\nimport { Button } from \"antd\";\r\nimport { CreateExcursionPage } from \"../../../generators/landing-pages/create-excursion-page/CreateExcursionPage\";\r\nimport CodeDisplay from \"../../../components/code-display/CodeDisplay\";\r\nimport { ShowMessage } from \"../../../utils/ShowMessage\";\r\n\r\nexport default function ExcursionPageGenerator() {\r\n  const pageTitle = \"Excursion page generator\";\r\n  const heroRef = useRef();\r\n  const bodyContentRef = useRef();\r\n  const pagePrevNextLinkingRef = useRef();\r\n  const [generatedHtml, setGeneratedHtml] = useState(\"\");\r\n  const codeDisplayRef = useRef(null);\r\n  const { contextHolder, showError, showSuccess } = ShowMessage();\r\n\r\n  const content = [\r\n    {\r\n      rowType: \"heading\",\r\n      items: {\r\n        headings: [\r\n          {\r\n            type: \"h2\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h3\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h4\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"p\",\r\n            class: \"paragraph-to-heading\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      rowType: \"paragraph\",\r\n      items: {\r\n        paragraphs: [\r\n          {\r\n            type: \"p\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"li\",\r\n            class: \"\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = () => {\r\n    const isHeroValid = heroRef.current?.validate?.();\r\n    const isBodyValid = bodyContentRef.current?.validate?.();\r\n    const isPagePrevNextLinkingValid =\r\n      pagePrevNextLinkingRef.current?.validate?.();\r\n\r\n    if (!isHeroValid || !isBodyValid || !isPagePrevNextLinkingValid) {\r\n      showError(generateErrorMessage);\r\n      return;\r\n    }\r\n\r\n    const heroRefValues = heroRef.current?.getValues?.();\r\n    const bodyContentValues = bodyContentRef.current?.getValues?.();\r\n    const pagePrevNextLinkingValues =\r\n      pagePrevNextLinkingRef.current?.getValues?.();\r\n\r\n    const excursionPageHtml = CreateExcursionPage({\r\n      heroContent: heroRefValues,\r\n      bodyContent: bodyContentValues,\r\n      pagePrevNextLinkingContent: pagePrevNextLinkingValues,\r\n    });\r\n\r\n    setGeneratedHtml(excursionPageHtml);\r\n\r\n    setTimeout(() => {\r\n      codeDisplayRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 100);\r\n\r\n    showSuccess(generateSuccessMessage);\r\n  };\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"title\" content={pageTitle} />\r\n      </Helmet>\r\n      <h1 className=\"regular28\">Excursion page generator</h1>\r\n      <HeroContent ref={heroRef} pageTitle={true} imageLink={true} />\r\n      <BodyContent ref={bodyContentRef} content={content} />\r\n      <PagePrevNextLinking ref={pagePrevNextLinkingRef} />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        type=\"primary\"\r\n        style={{ marginTop: \"20px\", width: \"100%\" }}\r\n      >\r\n        Generate excursion page\r\n      </Button>\r\n      {generatedHtml && (\r\n        <CodeDisplay content={generatedHtml} scrollRef={codeDisplayRef} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["urlRegex","useRows","initialRows","arguments","length","undefined","rows","setRows","useState","addRow","useCallback","extraData","prev","_objectSpread","key","concat","Date","now","Math","random","toString","substr","removeRow","filter","row","useTextChange","_ref","setText","setErrors","field","handleTextChange","textValue","text","TextArea","Input","CodeDisplay","content","scrollRef","copied","setCopied","_jsxs","ref","className","id","style","marginTop","width","children","display","justifyContent","alignItems","marginBottom","_jsx","Tooltip","title","Button","icon","CopyOutlined","onClick","async","navigator","clipboard","writeText","message","success","setTimeout","err","error","type","size","value","resize","readOnly","ShowMessage","messageApi","contextHolder","useMessage","showError","msg","open","showSuccess","showInfo","MinifyHtml","html","replace","trim","rowKey","placement","DeleteOutlined","color","variant","useTypeChange","setSelectedType","setClasses","handleTypeChange","typeValue","rowClasses","item","class","map","label","generateSuccessMessage","generateErrorMessage","forwardRef","pageTitle","imageLink","errors","values","setValues","useImperativeHandle","validate","newErrors","test","Object","keys","getValues","fields","push","htmlFor","onChange","e","handleChange","target","selectedType","selectedClass","setSelectedClass","classes","types","newError","forEach","Select","allowClear","options","disabled","bodyHeadingContent","useRef","bodyParagraphContent","current","_bodyHeadingContent$c","_bodyParagraphContent","heading","paragraph","_bodyHeadingContent$c2","_bodyParagraphContent2","renderContent","headingContent","find","c","rowType","paragraphContent","_Fragment","BodyHeadingContent","el","items","headings","BodyParagraphContent","paragraphs","Collapse","backgroundColor","extra","RemoveButton","handleAddRow","props","prevPageTitle","prevPageLink","nextPageTitle","nextPageLink","newValues","CreateExcursionPage","heroContent","bodyContent","pagePrevNextLinkingContent","renderArticle","groupKey","_ref2","join","_ref3","renderLinks","linksHtml","ExcursionPageGenerator","heroRef","bodyContentRef","pagePrevNextLinkingRef","generatedHtml","setGeneratedHtml","codeDisplayRef","Helmet","name","HeroContent","BodyContent","PagePrevNextLinking","handleSubmit","_heroRef$current","_heroRef$current$vali","_bodyContentRef$curre","_bodyContentRef$curre2","_pagePrevNextLinkingR","_pagePrevNextLinkingR2","_heroRef$current2","_heroRef$current2$get","_bodyContentRef$curre3","_bodyContentRef$curre4","_pagePrevNextLinkingR3","_pagePrevNextLinkingR4","isHeroValid","call","isBodyValid","isPagePrevNextLinkingValid","heroRefValues","bodyContentValues","pagePrevNextLinkingValues","excursionPageHtml","_codeDisplayRef$curre","scrollIntoView","behavior"],"sourceRoot":""}