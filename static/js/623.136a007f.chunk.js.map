{"version":3,"file":"static/js/623.136a007f.chunk.js","mappings":"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","sources":["components/landing-pages/hero-content/HeroContent.jsx","hooks/useRows.jsx","components/landing-pages/body-content/heading-content/BodyHeadingContent.jsx","components/landing-pages/body-content/paragraph-content/BodyParagraphContent.jsx","components/landing-pages/body-content/BodyContent.jsx","components/landing-pages/page-prev-next-linking/PagePrevNextLinking.jsx","constants/alertMessages.js","generators/landing-pages/create-excursion-page/CreateExcursionPage.jsx","utils/MinifyHtml.jsx","generators/landing-pages/create-excursion-page/CreateExcursionPageStyles.js","components/code-display/CodeDisplay.jsx","routes/landing-pages/excursions/ExcursionPageGenerator.jsx"],"sourcesContent":["import { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport \"./HeroContent.css\";\r\n\r\nconst HeroContent = forwardRef(({ pageTitle, imageLink }, ref) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [values, setValues] = useState({\r\n    pageTitle: \"\",\r\n    imageLink: \"\",\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newErrors = {};\r\n\r\n      if (imageLink && values.imageLink.trim() !== \"\") {\r\n        const urlRegex = /^(https?):\\/\\/[^\\s/$.?#].[^\\s]*$/i;\r\n        if (!urlRegex.test(values.imageLink)) {\r\n          newErrors.imageLink = \"Please enter a valid URL\";\r\n        }\r\n      } else if (imageLink && values.imageLink.trim() === \"\") {\r\n        newErrors.imageLink = \"Image link is required\";\r\n      }\r\n\r\n      if (pageTitle && values.pageTitle.trim() === \"\") {\r\n        newErrors.pageTitle = \"Page title is required\";\r\n      }\r\n\r\n      setErrors(newErrors);\r\n      return Object.keys(newErrors).length === 0;\r\n    },\r\n\r\n    getValues: () => values,\r\n  }));\r\n\r\n  const handleChange = (key, value) => {\r\n    setValues((prev) => ({ ...prev, [key]: value }));\r\n    setErrors((prev) => ({ ...prev, [key]: \"\" }));\r\n  };\r\n\r\n  const fields = [];\r\n\r\n  if (pageTitle) {\r\n    fields.push({ label: \"Page title\", key: \"pageTitle\" });\r\n  }\r\n\r\n  if (imageLink) {\r\n    fields.push({ label: \"Image link\", key: \"imageLink\" });\r\n  }\r\n\r\n  return (\r\n    <section className=\"hero-content basic-col\">\r\n      <h2 className=\"regular24\">Hero content</h2>\r\n      <div className=\"content\">\r\n        {fields.map((field) => (\r\n          <div key={field.key} className=\"input\">\r\n            <label htmlFor={field.key}>{field.label}</label>\r\n            <Input\r\n              id={field.key}\r\n              value={values[field.key]}\r\n              onChange={(e) => handleChange(field.key, e.target.value)}\r\n            />\r\n            {errors[field.key] && (\r\n              <div className=\"error\">{errors[field.key]}</div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default HeroContent;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport function useRows(initialRows = []) {\r\n  const [rows, setRows] = useState(initialRows);\r\n\r\n  const addRow = useCallback((extraData = {}) => {\r\n    setRows((prev) => [\r\n      ...prev,\r\n      {\r\n        key: prev.length,\r\n        ...extraData,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const removeRow = useCallback((key) => {\r\n    setRows((prev) => prev.filter((row) => row.key !== key));\r\n  }, []);\r\n\r\n  return { rows, addRow, removeRow };\r\n}\r\n","import { Select, Input, Button } from \"antd\";\r\nimport \"../BodyContent.css\";\r\nimport { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { useRows } from \"../../../../hooks/useRows\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst BodyHeadingContent = forwardRef(({ content }, ref) => {\r\n  const [selectedType, setSelectedType] = useState({});\r\n  const [selectedClass, setSelectedClass] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [text, setText] = useState({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n  const [errors, setErrors] = useState({ type: {}, text: {} });\r\n\r\n  const types = content.map((item) => ({\r\n    label: item.type,\r\n    value: item.type,\r\n  }));\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { type: {}, text: {} };\r\n\r\n      if (rows.length !== 0) {\r\n        rows.forEach((row) => {\r\n          if (!selectedType[row.key]) {\r\n            newError.type[row.key] = \"Heading type is required\";\r\n          }\r\n\r\n          if (!text[row.key]) {\r\n            newError.text[row.key] = \"Heading content is required\";\r\n          }\r\n        });\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.type || {}).length === 0 &&\r\n        Object.keys(newError.text || {}).length === 0\r\n      );\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {};\r\n      rows.forEach((row) => {\r\n        values[row.key] = {\r\n          type: selectedType[row.key],\r\n          class: selectedClass[row.key],\r\n          text: text[row.key],\r\n        };\r\n      });\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  const handleTypeChange = (key, typeValue) => {\r\n    setSelectedType((prev) => ({ ...prev, [key]: typeValue }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      type: {\r\n        ...(prev.type || {}),\r\n        [key]: \"\",\r\n      },\r\n    }));\r\n\r\n    const rowClasses = content\r\n      .filter((item) => item.type === typeValue && item.class !== \"\")\r\n      .map((item) => ({\r\n        label: item.class,\r\n        value: item.class,\r\n      }));\r\n\r\n    setClasses((prev) => ({ ...prev, [key]: rowClasses }));\r\n  };\r\n\r\n  const handleTextChange = (key, textValue) => {\r\n    setText((prev) => ({ ...prev, [key]: textValue }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      text: {\r\n        ...(prev.text || {}),\r\n        [key]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <section className=\"heading-content\">\r\n      {rows.map((row) => (\r\n        <div className=\"basic-row\" key={row.key}>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`headingType-${row.key}`}>Heading type</label>\r\n            <Select\r\n              id={`headingType-${row.key}`}\r\n              style={{ width: \"150px\" }}\r\n              allowClear\r\n              options={types}\r\n              onChange={(value) => handleTypeChange(row.key, value)}\r\n              value={selectedType[row.key] || null}\r\n            />\r\n            {errors.type[row.key] && (\r\n              <div className=\"error\">{errors.type[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`headingClass-${row.key}`}>Heading class</label>\r\n            <Select\r\n              id={`headingClass-${row.key}`}\r\n              style={{ width: \"300px\" }}\r\n              allowClear\r\n              options={classes[row.key]}\r\n              disabled={\r\n                !selectedType[row.key] ||\r\n                !classes[row.key] ||\r\n                classes[row.key].length === 0\r\n              }\r\n              onChange={(value) =>\r\n                setSelectedClass((prev) => ({ ...prev, [row.key]: value }))\r\n              }\r\n              value={selectedClass[row.key] || null}\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor={`headingContent-${row.key}`}>Heading content</label>\r\n            <TextArea\r\n              id={`headingContent-${row.key}`}\r\n              disabled={!selectedType[row.key]}\r\n              rows={1}\r\n              style={{ resize: \"none\" }}\r\n              onChange={(e) => handleTextChange(row.key, e.target.value)}\r\n            ></TextArea>\r\n            {errors.text[row.key] && selectedType[row.key] && (\r\n              <div className=\"error\">{errors.text[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <Button\r\n            color=\"red\"\r\n            variant=\"outlined\"\r\n            onClick={() => removeRow(row.key)}\r\n            style={{ marginTop: \"29px\" }}\r\n          >\r\n            Remove heading row\r\n          </Button>\r\n        </div>\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={() => addRow()}>\r\n        Add heading row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyHeadingContent;\r\n","import { Select, Input, Button } from \"antd\";\r\nimport \"../BodyContent.css\";\r\nimport { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { useRows } from \"../../../../hooks/useRows\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst BodyParagraphContent = forwardRef(({ content }, ref) => {\r\n  const [selectedType, setSelectedType] = useState({});\r\n  const [selectedClass, setSelectedClass] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [text, setText] = useState({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n  const [errors, setErrors] = useState({ type: {}, text: {} });\r\n\r\n  const types = content.map((item) => ({\r\n    label: item.type,\r\n    value: item.type,\r\n  }));\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newError = { type: {}, text: {} };\r\n\r\n      if (rows.length !== 0) {\r\n        rows.forEach((row) => {\r\n          if (!selectedType[row.key]) {\r\n            newError.type[row.key] = \"Paragraph type is required\";\r\n          }\r\n\r\n          if (!text[row.key]) {\r\n            newError.text[row.key] = \"Paragraph content is required\";\r\n          }\r\n        });\r\n      }\r\n\r\n      setErrors(newError);\r\n      return (\r\n        Object.keys(newError.type || {}).length === 0 &&\r\n        Object.keys(newError.text || {}).length === 0\r\n      );\r\n    },\r\n    getValues: () => {\r\n      const values = {};\r\n      rows.forEach((row) => {\r\n        values[row.key] = {\r\n          type: selectedType[row.key],\r\n          class: selectedClass[row.key],\r\n          text: text[row.key],\r\n        };\r\n      });\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  const handleTypeChange = (key, typeValue) => {\r\n    setSelectedType((prev) => ({ ...prev, [key]: typeValue }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      type: {\r\n        ...(prev.type || {}),\r\n        [key]: \"\",\r\n      },\r\n    }));\r\n\r\n    const rowClasses = content\r\n      .filter((item) => item.type === typeValue && item.class !== \"\")\r\n      .map((item) => ({\r\n        label: item.class,\r\n        value: item.class,\r\n      }));\r\n\r\n    setClasses((prev) => ({ ...prev, [key]: rowClasses }));\r\n  };\r\n\r\n  const handleTextChange = (key, textValue) => {\r\n    setText((prev) => ({ ...prev, [key]: textValue }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      text: {\r\n        ...(prev.text || {}),\r\n        [key]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <section className=\"paragraph-content\">\r\n      {rows.map((row) => (\r\n        <div className=\"basic-row\" key={row.key}>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`paragraphType-${row.key}`}>Paragraph type</label>\r\n            <Select\r\n              id={`paragraphType-${row.key}`}\r\n              style={{ width: \"150px\" }}\r\n              allowClear\r\n              options={types}\r\n              onChange={(value) => handleTypeChange(row.key, value)}\r\n              value={selectedType[row.key] || null}\r\n            />\r\n            {errors.type[row.key] && (\r\n              <div className=\"error\">{errors.type[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-gap-only\">\r\n            <label htmlFor={`paragraphClass-${row.key}`}>Paragraph class</label>\r\n            <Select\r\n              id={`paragraphClass-${row.key}`}\r\n              style={{ width: \"300px\" }}\r\n              allowClear\r\n              options={classes[row.key]}\r\n              disabled={\r\n                !selectedType[row.key] ||\r\n                !classes[row.key] ||\r\n                classes[row.key].length === 0\r\n              }\r\n              onChange={(value) =>\r\n                setSelectedClass((prev) => ({ ...prev, [row.key]: value }))\r\n              }\r\n              value={selectedClass[row.key] || null}\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor={`paragraphContent-${row.key}`}>\r\n              Paragraph content\r\n            </label>\r\n            <TextArea\r\n              id={`paragraphContent-${row.key}`}\r\n              disabled={!selectedType[row.key]}\r\n              rows={4}\r\n              style={{ resize: \"none\" }}\r\n              onChange={(e) => handleTextChange(row.key, e.target.value)}\r\n            ></TextArea>\r\n            {errors.text[row.key] && selectedType[row.key] && (\r\n              <div className=\"error\">{errors.text[row.key]}</div>\r\n            )}\r\n          </div>\r\n          <Button\r\n            color=\"red\"\r\n            variant=\"outlined\"\r\n            onClick={() => removeRow(row.key)}\r\n            style={{ marginTop: \"29px\" }}\r\n          >\r\n            Remove paragraph row\r\n          </Button>\r\n        </div>\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={() => addRow()}>\r\n        Add paragraph row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyParagraphContent;\r\n","import { Button, Collapse, Tooltip } from \"antd\";\r\nimport BodyHeadingContent from \"./heading-content/BodyHeadingContent\";\r\nimport BodyParagraphContent from \"./paragraph-content/BodyParagraphContent\";\r\nimport \"./BodyContent.css\";\r\nimport { useRows } from \"../../../hooks/useRows\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useRef, useImperativeHandle, forwardRef } from \"react\";\r\n\r\nconst BodyContent = forwardRef(({ content }, ref) => {\r\n  const bodyHeadingContent = useRef({});\r\n  const bodyParagraphContent = useRef({});\r\n  const { rows, addRow, removeRow } = useRows();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      for (const key in bodyHeadingContent.current) {\r\n        if (bodyHeadingContent.current[key]?.validate) {\r\n          const valid = bodyHeadingContent.current[key].validate();\r\n          if (!valid) return false;\r\n        }\r\n      }\r\n\r\n      for (const key in bodyParagraphContent.current) {\r\n        if (bodyParagraphContent.current[key]?.validate) {\r\n          const valid = bodyParagraphContent.current[key].validate();\r\n          if (!valid) return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n\r\n    getValues: () => {\r\n      const values = {\r\n        heading: {},\r\n        paragraph: {},\r\n      };\r\n      for (const key in bodyHeadingContent.current) {\r\n        if (bodyHeadingContent.current[key]?.getValues) {\r\n          values.heading[key] = bodyHeadingContent.current[key].getValues();\r\n        }\r\n      }\r\n\r\n      for (const key in bodyParagraphContent.current) {\r\n        if (bodyParagraphContent.current[key]?.getValues) {\r\n          values.paragraph[key] = bodyParagraphContent.current[key].getValues();\r\n        }\r\n      }\r\n      return values;\r\n    },\r\n  }));\r\n\r\n  const handleAddRow = () => {\r\n    addRow({ title: `Row ${rows.length + 1}` });\r\n  };\r\n\r\n  const removeButton = (key) => {\r\n    return (\r\n      <Tooltip title=\"Remove row\" placement=\"left\">\r\n        <Button\r\n          icon={<DeleteOutlined />}\r\n          onClick={() => removeRow(key)}\r\n          color=\"red\"\r\n          variant=\"outlined\"\r\n        ></Button>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  const renderContent = (rowKey) => {\r\n    const headingContent = content.find((c) => c.rowType === \"heading\");\r\n    const paragraphContent = content.find((c) => c.rowType === \"paragraph\");\r\n\r\n    return (\r\n      <>\r\n        {headingContent && (\r\n          <BodyHeadingContent\r\n            ref={(el) => (bodyHeadingContent.current[rowKey] = el)}\r\n            content={headingContent.items.headings}\r\n          />\r\n        )}\r\n        {paragraphContent && (\r\n          <BodyParagraphContent\r\n            ref={(el) => (bodyParagraphContent.current[rowKey] = el)}\r\n            content={paragraphContent.items.paragraphs}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"body-content basic-col\">\r\n      <h2 className=\"regular24\">Body content</h2>\r\n      {rows.map((row) => (\r\n        <Collapse\r\n          style={{ backgroundColor: \"#fff\" }}\r\n          key={row.key}\r\n          items={[\r\n            {\r\n              key: row.key,\r\n              label: row.title,\r\n              children: renderContent(row.key),\r\n              extra: removeButton(row.key),\r\n            },\r\n          ]}\r\n        />\r\n      ))}\r\n\r\n      <Button color=\"default\" variant=\"outlined\" onClick={handleAddRow}>\r\n        Add row\r\n      </Button>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default BodyContent;\r\n","import { Input } from \"antd\";\r\nimport { forwardRef, useImperativeHandle, useState } from \"react\";\r\n\r\nconst PagePrevNextLinking = forwardRef((props, ref) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [values, setValues] = useState({\r\n    prevPageTitle: \"\",\r\n    prevPageLink: \"\",\r\n    nextPageTitle: \"\",\r\n    nextPageLink: \"\",\r\n  });\r\n\r\n  const handleChange = (key, value) => {\r\n    setValues((prev) => {\r\n      const newValues = { ...prev, [key]: value };\r\n\r\n      if (\r\n        (key === \"prevPageTitle\" || key === \"nextPageTitle\") &&\r\n        value === \"\"\r\n      ) {\r\n        if (key === \"prevPageTitle\") {\r\n          newValues.prevPageLink = \"\";\r\n        } else if (key === \"nextPageTitle\") {\r\n          newValues.nextPageLink = \"\";\r\n        }\r\n      }\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    validate: () => {\r\n      const newErrors = {};\r\n      const urlRegex = /^(https?):\\/\\/[^\\s/$.?#].[^\\s]*$/i;\r\n\r\n      if (values.prevPageTitle.trim() !== \"\") {\r\n        if (values.prevPageLink.trim() === \"\") {\r\n          newErrors.prevPageLink =\r\n            \"Previous page link is required. Add it or remove previous page title\";\r\n        } else if (values.prevPageLink.trim() !== \"\") {\r\n          if (!urlRegex.test(values.prevPageLink)) {\r\n            newErrors.prevPageLink = \"Please enter a valid URL\";\r\n          }\r\n        }\r\n      }\r\n\r\n      if (values.nextPageTitle.trim() !== \"\") {\r\n        if (values.nextPageLink.trim() === \"\") {\r\n          newErrors.nextPageLink =\r\n            \"Next page link is required. Add it or remove next page title\";\r\n        } else if (values.nextPageLink.trim() !== \"\") {\r\n          if (!urlRegex.test(values.nextPageLink)) {\r\n            newErrors.nextPageLink = \"Please enter a valid URL\";\r\n          }\r\n        }\r\n      }\r\n\r\n      setErrors(newErrors);\r\n      return Object.keys(newErrors).length === 0;\r\n    },\r\n\r\n    getValues: () => values,\r\n  }));\r\n\r\n  return (\r\n    <section className=\"page-prev-next-linking basic-col\">\r\n      <h2 className=\"regular24\">Linking</h2>\r\n      <div className=\"basic-row\">\r\n        <div className=\"basic-col\">\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"prevPageTitle\">Previous page title</label>\r\n            <Input\r\n              value={values.prevPageTitle}\r\n              onChange={(value) =>\r\n                handleChange(\"prevPageTitle\", value.target.value)\r\n              }\r\n              allowClear\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"prevPageLink\">Previous page link</label>\r\n            <Input\r\n              value={values.prevPageLink}\r\n              onChange={(value) =>\r\n                handleChange(\"prevPageLink\", value.target.value)\r\n              }\r\n              disabled={!values.prevPageTitle.trim()}\r\n              allowClear\r\n            />\r\n            {errors.prevPageLink && (\r\n              <div className=\"error\">{errors.prevPageLink}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"basic-col\">\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"nextPageTitle\">Next page title</label>\r\n            <Input\r\n              value={values.nextPageTitle}\r\n              onChange={(value) =>\r\n                handleChange(\"nextPageTitle\", value.target.value)\r\n              }\r\n              allowClear\r\n            />\r\n          </div>\r\n          <div className=\"basic-col\">\r\n            <label htmlFor=\"nextPageLink\">Next page link</label>\r\n            <Input\r\n              value={values.nextPageLink}\r\n              onChange={(value) =>\r\n                handleChange(\"nextPageLink\", value.target.value)\r\n              }\r\n              disabled={!values.nextPageTitle.trim()}\r\n              allowClear\r\n            />\r\n            {errors.nextPageLink && (\r\n              <div className=\"error\">{errors.nextPageLink}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default PagePrevNextLinking;\r\n","export const basicSuccessMessage = \"Success!\";\r\nexport const basicErrorMessage = \"Something went wrong. Please try again.\";\r\nexport const generateSuccessMessage = \"Content generated successfully!\";\r\nexport const generateErrorMessage = \"Failed to generate content.\";\r\n","import { CreateExcursionPageStyles } from \"./CreateExcursionPageStyles\";\r\nimport { MinifyHtml } from \"../../../utils/MinifyHtml\";\r\n\r\nexport const CreateExcursionPage = ({\r\n  heroContent,\r\n  bodyContent,\r\n  pagePrevNextLinkingContent,\r\n}) => {\r\n  const { pageTitle, imageLink } = heroContent;\r\n\r\n  const renderArticle = () => {\r\n    const heading = bodyContent.heading || {};\r\n    const paragraph = bodyContent.paragraph || {};\r\n\r\n    return Object.keys(heading).map((groupKey) => {\r\n      return `\r\n        <article>\r\n          ${Object.values(heading[groupKey])\r\n            .map(({ type, text, class: className }) => {\r\n              if (type === \"p\" && className) {\r\n                return `<p><strong class=\"${className}\">${text}</strong></p>`;\r\n              }\r\n              return `<${type}>${text}</${type}>`;\r\n            })\r\n            .join(\"\\n\")}\r\n          ${\r\n            paragraph[groupKey]\r\n              ? Object.values(paragraph[groupKey])\r\n                  .map(({ type, text }) => {\r\n                    return `<${type}>${text}</${type}>`;\r\n                  })\r\n                  .join(\"\\n\")\r\n              : \"\"\r\n          }\r\n        </article>\r\n      `;\r\n    });\r\n  };\r\n\r\n  const renderLinks = () => {\r\n    const { prevPageTitle, prevPageLink, nextPageTitle, nextPageLink } =\r\n      pagePrevNextLinkingContent;\r\n\r\n    const linksHtml = [];\r\n\r\n    if (prevPageTitle) {\r\n      linksHtml.push(`\r\n        <a class=\"prev-excursion-container\" href=${prevPageLink} style=\"text-decoration:none;color:#000\">\r\n            <div class=\"prev-excursion-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                    <path d=\"M15 6L9 12L15 18\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\r\n                </svg></div>\r\n                <span class=\"prev-excursion-title\">${prevPageTitle}</span>\r\n        </a>\r\n        `);\r\n    }\r\n\r\n    if (nextPageTitle) {\r\n      linksHtml.push(`\r\n        <a class=\"next-excursion-container\" href=${nextPageLink} style=\"text-decoration:none;color:#000\">\r\n            \r\n                <span class=\"next-excursion-title\">${nextPageTitle}</span>\r\n                <div class=\"next-excursion-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                    <path d=\"M9 6L15 12L9 18\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\r\n                </svg></div>\r\n        </a>\r\n        `);\r\n    }\r\n\r\n    return linksHtml.join(\"\\n\");\r\n  };\r\n\r\n  return MinifyHtml({\r\n    html: `\r\n  ${CreateExcursionPageStyles}\r\n    <section class=\"excursion-main-container\">\r\n      <h1 class=\"excursion-heading\">${pageTitle}</h1>\r\n      <div class=\"excursion-image-container\">\r\n        <img\r\n          src=\"${imageLink}\"\r\n          loading=\"eager\"\r\n          fetchpriority=\"high\"\r\n          alt=\"${pageTitle}\"\r\n        />\r\n      </div>\r\n\r\n      <article class=\"excursion-article-section\">\r\n        ${renderArticle().join(\"\\n\")}\r\n      </article>\r\n\r\n      <div class=\"buttons-container\">\r\n        ${renderLinks()}\r\n      </div>\r\n    </section>\r\n  `,\r\n  });\r\n};\r\n","export const MinifyHtml = ({ html }) => {\r\n  return html\r\n    .replace(/\\n/g, \"\") // Remove newlines\r\n    .replace(/\\s{2,}/g, \" \") // Collapse multiple spaces\r\n    .replace(/>\\s+</g, \"><\") // Remove space between tags\r\n    .trim(); // Remove leading/trailing whitespace\r\n};\r\n","export const CreateExcursionPageStyles = `<style>\r\n    .excursion-main-container{max-width:1030px!important;width:100%;margin:0 auto}.excursion-article-section h3,.paragraph-to-heading{font-size:1.5em;margin-block-start:.83em;margin-block-end:.83em}.excursion-heading{text-align:center;line-height:46px;font-size:38px;display:flex;justify-content:center;font-weight:600;color:rgba(0,0,0,.85);margin-bottom:calc(.5em + 24px);margin-top:25px}.excursion-image-container img{border-radius:24px;width:100%;height:480px}.buttons-container{display:inline-flex;align-items:center;justify-content:space-between;width:100%}.next-excursion-icon,.prev-excursion-icon{width:25px;height:25px}@media (max-width:1024px){.excursion-image-container img{height:auto}}.next-excursion-container,.prev-excursion-container{display:inline-flex;width:100%;align-items:center;justify-content:flex-end;margin:30px 0;gap:5px}.prev-excursion-container{justify-content:flex-start}.next-excursion-title,.prev-excursion-title{font-size:16px;font-weight:600;margin:0}\r\n</style>`;\r\n","import { Input, Tooltip, Button, message } from \"antd\";\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default function CodeDisplay({ content, scrollRef }) {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(content);\r\n      setCopied(true);\r\n      message.success(\"Copied to clipboard!\");\r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (err) {\r\n      message.error(\"Failed to copy!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      ref={scrollRef}\r\n      className=\"code-display basic-col\"\r\n      id=\"codeDisplay\"\r\n      style={{ marginTop: \"20px\", width: \"100%\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"8px\",\r\n        }}\r\n      >\r\n        <h2 className=\"regular24\">Generated code</h2>\r\n        <Tooltip title={copied ? \"Copied!\" : \"Copy to clipboard\"}>\r\n          <Button\r\n            icon={<CopyOutlined />}\r\n            onClick={handleCopy}\r\n            type=\"text\"\r\n            size=\"large\"\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <TextArea value={content} style={{ resize: \"none\" }} rows={6} readOnly />\r\n    </section>\r\n  );\r\n}\r\n","import { Helmet } from \"react-helmet-async\";\r\nimport { useRef, useState } from \"react\";\r\nimport HeroContent from \"../../../components/landing-pages/hero-content/HeroContent\";\r\nimport BodyContent from \"../../../components/landing-pages/body-content/BodyContent\";\r\nimport PagePrevNextLinking from \"../../../components/landing-pages/page-prev-next-linking/PagePrevNextLinking\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  generateErrorMessage,\r\n  generateSuccessMessage,\r\n} from \"../../../constants/alertMessages\";\r\nimport { Button } from \"antd\";\r\nimport { CreateExcursionPage } from \"../../../generators/landing-pages/create-excursion-page/CreateExcursionPage\";\r\nimport CodeDisplay from \"../../../components/code-display/CodeDisplay\";\r\n\r\nexport default function ExcursionPageGenerator() {\r\n  const pageTitle = \"Excursion page generator\";\r\n  const heroRef = useRef();\r\n  const bodyContentRef = useRef();\r\n  const pagePrevNextLinkingRef = useRef();\r\n  const [generatedHtml, setGeneratedHtml] = useState(\"\");\r\n  const codeDisplayRef = useRef(null);\r\n\r\n  const content = [\r\n    {\r\n      rowType: \"heading\",\r\n      items: {\r\n        headings: [\r\n          {\r\n            type: \"h2\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h3\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"h4\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"p\",\r\n            class: \"paragraph-to-heading\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      rowType: \"paragraph\",\r\n      items: {\r\n        paragraphs: [\r\n          {\r\n            type: \"p\",\r\n            class: \"\",\r\n          },\r\n          {\r\n            type: \"li\",\r\n            class: \"\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = () => {\r\n    const isHeroValid = heroRef.current?.validate?.();\r\n    const isBodyValid = bodyContentRef.current?.validate?.();\r\n    const isPagePrevNextLinkingValid =\r\n      pagePrevNextLinkingRef.current?.validate?.();\r\n\r\n    if (!isHeroValid || !isBodyValid || !isPagePrevNextLinkingValid) {\r\n      toast.error(generateErrorMessage);\r\n      return;\r\n    }\r\n\r\n    const heroRefValues = heroRef.current?.getValues?.();\r\n    const bodyContentValues = bodyContentRef.current?.getValues?.();\r\n    const pagePrevNextLinkingValues =\r\n      pagePrevNextLinkingRef.current?.getValues?.();\r\n\r\n    const excursionPageHtml = CreateExcursionPage({\r\n      heroContent: heroRefValues,\r\n      bodyContent: bodyContentValues,\r\n      pagePrevNextLinkingContent: pagePrevNextLinkingValues,\r\n    });\r\n\r\n    setGeneratedHtml(excursionPageHtml);\r\n\r\n    setTimeout(() => {\r\n      codeDisplayRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 100);\r\n\r\n    toast.success(generateSuccessMessage);\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"title\" content={pageTitle} />\r\n      </Helmet>\r\n      <h1 className=\"regular28\">Excursion page generator</h1>\r\n      <HeroContent ref={heroRef} pageTitle={true} imageLink={true} />\r\n      <BodyContent ref={bodyContentRef} content={content} />\r\n      <PagePrevNextLinking ref={pagePrevNextLinkingRef} />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        type=\"primary\"\r\n        style={{ marginTop: \"20px\", width: \"100%\" }}\r\n      >\r\n        Generate excursion page\r\n      </Button>\r\n      {generatedHtml && (\r\n        <CodeDisplay content={generatedHtml} scrollRef={codeDisplayRef} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["forwardRef","_ref","ref","pageTitle","imageLink","errors","setErrors","useState","values","setValues","useImperativeHandle","validate","newErrors","trim","test","Object","keys","length","getValues","fields","push","label","key","_jsxs","className","children","_jsx","map","field","htmlFor","Input","id","value","onChange","e","handleChange","target","prev","_objectSpread","useRows","initialRows","arguments","undefined","rows","setRows","addRow","useCallback","extraData","removeRow","filter","row","TextArea","content","selectedType","setSelectedType","selectedClass","setSelectedClass","classes","setClasses","text","setText","type","types","item","newError","forEach","class","concat","Select","style","width","allowClear","options","handleTypeChange","typeValue","rowClasses","disabled","resize","handleTextChange","textValue","Button","color","variant","onClick","marginTop","bodyHeadingContent","useRef","bodyParagraphContent","current","_bodyHeadingContent$c","_bodyParagraphContent","heading","paragraph","_bodyHeadingContent$c2","_bodyParagraphContent2","renderContent","rowKey","headingContent","find","c","rowType","paragraphContent","_Fragment","BodyHeadingContent","el","items","headings","BodyParagraphContent","paragraphs","Collapse","backgroundColor","title","extra","Tooltip","placement","icon","DeleteOutlined","handleAddRow","props","prevPageTitle","prevPageLink","nextPageTitle","nextPageLink","newValues","urlRegex","generateSuccessMessage","generateErrorMessage","CreateExcursionPage","heroContent","bodyContent","pagePrevNextLinkingContent","html","replace","MinifyHtml","renderArticle","groupKey","_ref2","join","_ref3","renderLinks","linksHtml","CodeDisplay","scrollRef","copied","setCopied","display","justifyContent","alignItems","marginBottom","CopyOutlined","async","navigator","clipboard","writeText","message","success","setTimeout","err","error","size","readOnly","ExcursionPageGenerator","heroRef","bodyContentRef","pagePrevNextLinkingRef","generatedHtml","setGeneratedHtml","codeDisplayRef","Helmet","name","HeroContent","BodyContent","PagePrevNextLinking","handleSubmit","_heroRef$current","_heroRef$current$vali","_bodyContentRef$curre","_bodyContentRef$curre2","_pagePrevNextLinkingR","_pagePrevNextLinkingR2","_heroRef$current2","_heroRef$current2$get","_bodyContentRef$curre3","_bodyContentRef$curre4","_pagePrevNextLinkingR3","_pagePrevNextLinkingR4","isHeroValid","call","isBodyValid","isPagePrevNextLinkingValid","toast","heroRefValues","bodyContentValues","pagePrevNextLinkingValues","excursionPageHtml","_codeDisplayRef$curre","scrollIntoView","behavior"],"sourceRoot":""}